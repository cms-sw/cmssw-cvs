//
// File generated by rootcint at Wed Mar 11 16:10:59 2009

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MusEcal_dict_src.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void MERun_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_MERun(void *p);
   static void deleteArray_MERun(void *p);
   static void destruct_MERun(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MERun*)
   {
      ::MERun *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MERun >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MERun", ::MERun::Class_Version(), "src/MERun.hh", 18,
                  typeid(::MERun), DefineBehavior(ptr, ptr),
                  &::MERun::Dictionary, isa_proxy, 4,
                  sizeof(::MERun) );
      instance.SetDelete(&delete_MERun);
      instance.SetDeleteArray(&deleteArray_MERun);
      instance.SetDestructor(&destruct_MERun);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MERun*)
   {
      return GenerateInitInstanceLocal((::MERun*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MERun*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MERunManager_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_MERunManager(void *p);
   static void deleteArray_MERunManager(void *p);
   static void destruct_MERunManager(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MERunManager*)
   {
      ::MERunManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MERunManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MERunManager", ::MERunManager::Class_Version(), "src/MERunManager.hh", 10,
                  typeid(::MERunManager), DefineBehavior(ptr, ptr),
                  &::MERunManager::Dictionary, isa_proxy, 4,
                  sizeof(::MERunManager) );
      instance.SetDelete(&delete_MERunManager);
      instance.SetDeleteArray(&deleteArray_MERunManager);
      instance.SetDestructor(&destruct_MERunManager);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MERunManager*)
   {
      return GenerateInitInstanceLocal((::MERunManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MERunManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MusEcal_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MusEcal(void *p = 0);
   static void *newArray_MusEcal(Long_t size, void *p);
   static void delete_MusEcal(void *p);
   static void deleteArray_MusEcal(void *p);
   static void destruct_MusEcal(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MusEcal*)
   {
      ::MusEcal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MusEcal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MusEcal", ::MusEcal::Class_Version(), "src/MusEcal.hh", 28,
                  typeid(::MusEcal), DefineBehavior(ptr, ptr),
                  &::MusEcal::Dictionary, isa_proxy, 4,
                  sizeof(::MusEcal) );
      instance.SetNew(&new_MusEcal);
      instance.SetNewArray(&newArray_MusEcal);
      instance.SetDelete(&delete_MusEcal);
      instance.SetDeleteArray(&deleteArray_MusEcal);
      instance.SetDestructor(&destruct_MusEcal);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MusEcal*)
   {
      return GenerateInitInstanceLocal((::MusEcal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MusEcal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MEVarVector_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_MEVarVector(void *p);
   static void deleteArray_MEVarVector(void *p);
   static void destruct_MEVarVector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MEVarVector*)
   {
      ::MEVarVector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MEVarVector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MEVarVector", ::MEVarVector::Class_Version(), "src/MEVarVector.hh", 13,
                  typeid(::MEVarVector), DefineBehavior(ptr, ptr),
                  &::MEVarVector::Dictionary, isa_proxy, 4,
                  sizeof(::MEVarVector) );
      instance.SetDelete(&delete_MEVarVector);
      instance.SetDeleteArray(&deleteArray_MEVarVector);
      instance.SetDestructor(&destruct_MEVarVector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MEVarVector*)
   {
      return GenerateInitInstanceLocal((::MEVarVector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MEVarVector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void METimeInterval_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_METimeInterval(void *p);
   static void deleteArray_METimeInterval(void *p);
   static void destruct_METimeInterval(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::METimeInterval*)
   {
      ::METimeInterval *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::METimeInterval >(0);
      static ::ROOT::TGenericClassInfo 
         instance("METimeInterval", ::METimeInterval::Class_Version(), "src/METimeInterval.hh", 10,
                  typeid(::METimeInterval), DefineBehavior(ptr, ptr),
                  &::METimeInterval::Dictionary, isa_proxy, 4,
                  sizeof(::METimeInterval) );
      instance.SetDelete(&delete_METimeInterval);
      instance.SetDeleteArray(&deleteArray_METimeInterval);
      instance.SetDestructor(&destruct_METimeInterval);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::METimeInterval*)
   {
      return GenerateInitInstanceLocal((::METimeInterval*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::METimeInterval*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MECanvasHolder_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MECanvasHolder(void *p = 0);
   static void *newArray_MECanvasHolder(Long_t size, void *p);
   static void delete_MECanvasHolder(void *p);
   static void deleteArray_MECanvasHolder(void *p);
   static void destruct_MECanvasHolder(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MECanvasHolder*)
   {
      ::MECanvasHolder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MECanvasHolder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MECanvasHolder", ::MECanvasHolder::Class_Version(), "src/MECanvasHolder.hh", 14,
                  typeid(::MECanvasHolder), DefineBehavior(ptr, ptr),
                  &::MECanvasHolder::Dictionary, isa_proxy, 4,
                  sizeof(::MECanvasHolder) );
      instance.SetNew(&new_MECanvasHolder);
      instance.SetNewArray(&newArray_MECanvasHolder);
      instance.SetDelete(&delete_MECanvasHolder);
      instance.SetDeleteArray(&deleteArray_MECanvasHolder);
      instance.SetDestructor(&destruct_MECanvasHolder);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MECanvasHolder*)
   {
      return GenerateInitInstanceLocal((::MECanvasHolder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MECanvasHolder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MEEBDisplay_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MEEBDisplay(void *p = 0);
   static void *newArray_MEEBDisplay(Long_t size, void *p);
   static void delete_MEEBDisplay(void *p);
   static void deleteArray_MEEBDisplay(void *p);
   static void destruct_MEEBDisplay(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MEEBDisplay*)
   {
      ::MEEBDisplay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MEEBDisplay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MEEBDisplay", ::MEEBDisplay::Class_Version(), "src/MEEBDisplay.hh", 14,
                  typeid(::MEEBDisplay), DefineBehavior(ptr, ptr),
                  &::MEEBDisplay::Dictionary, isa_proxy, 4,
                  sizeof(::MEEBDisplay) );
      instance.SetNew(&new_MEEBDisplay);
      instance.SetNewArray(&newArray_MEEBDisplay);
      instance.SetDelete(&delete_MEEBDisplay);
      instance.SetDeleteArray(&deleteArray_MEEBDisplay);
      instance.SetDestructor(&destruct_MEEBDisplay);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MEEBDisplay*)
   {
      return GenerateInitInstanceLocal((::MEEBDisplay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MEEBDisplay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MEEEDisplay_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MEEEDisplay(void *p = 0);
   static void *newArray_MEEEDisplay(Long_t size, void *p);
   static void delete_MEEEDisplay(void *p);
   static void deleteArray_MEEEDisplay(void *p);
   static void destruct_MEEEDisplay(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MEEEDisplay*)
   {
      ::MEEEDisplay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MEEEDisplay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MEEEDisplay", ::MEEEDisplay::Class_Version(), "src/MEEEDisplay.hh", 15,
                  typeid(::MEEEDisplay), DefineBehavior(ptr, ptr),
                  &::MEEEDisplay::Dictionary, isa_proxy, 4,
                  sizeof(::MEEEDisplay) );
      instance.SetNew(&new_MEEEDisplay);
      instance.SetNewArray(&newArray_MEEEDisplay);
      instance.SetDelete(&delete_MEEEDisplay);
      instance.SetDeleteArray(&deleteArray_MEEEDisplay);
      instance.SetDestructor(&destruct_MEEEDisplay);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MEEEDisplay*)
   {
      return GenerateInitInstanceLocal((::MEEEDisplay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MEEEDisplay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MEClickableCanvas_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_MEClickableCanvas(void *p);
   static void deleteArray_MEClickableCanvas(void *p);
   static void destruct_MEClickableCanvas(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MEClickableCanvas*)
   {
      ::MEClickableCanvas *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MEClickableCanvas >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MEClickableCanvas", ::MEClickableCanvas::Class_Version(), "src/MEClickableCanvas.hh", 9,
                  typeid(::MEClickableCanvas), DefineBehavior(ptr, ptr),
                  &::MEClickableCanvas::Dictionary, isa_proxy, 4,
                  sizeof(::MEClickableCanvas) );
      instance.SetDelete(&delete_MEClickableCanvas);
      instance.SetDeleteArray(&deleteArray_MEClickableCanvas);
      instance.SetDestructor(&destruct_MEClickableCanvas);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MEClickableCanvas*)
   {
      return GenerateInitInstanceLocal((::MEClickableCanvas*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MEClickableCanvas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MEPlotWindow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_MEPlotWindow(void *p);
   static void deleteArray_MEPlotWindow(void *p);
   static void destruct_MEPlotWindow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MEPlotWindow*)
   {
      ::MEPlotWindow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MEPlotWindow >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MEPlotWindow", ::MEPlotWindow::Class_Version(), "src/MEPlotWindow.hh", 12,
                  typeid(::MEPlotWindow), DefineBehavior(ptr, ptr),
                  &::MEPlotWindow::Dictionary, isa_proxy, 4,
                  sizeof(::MEPlotWindow) );
      instance.SetDelete(&delete_MEPlotWindow);
      instance.SetDeleteArray(&deleteArray_MEPlotWindow);
      instance.SetDestructor(&destruct_MEPlotWindow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MEPlotWindow*)
   {
      return GenerateInitInstanceLocal((::MEPlotWindow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MEPlotWindow*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MERunPanel_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_MERunPanel(void *p);
   static void deleteArray_MERunPanel(void *p);
   static void destruct_MERunPanel(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MERunPanel*)
   {
      ::MERunPanel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MERunPanel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MERunPanel", ::MERunPanel::Class_Version(), "src/MERunPanel.hh", 13,
                  typeid(::MERunPanel), DefineBehavior(ptr, ptr),
                  &::MERunPanel::Dictionary, isa_proxy, 4,
                  sizeof(::MERunPanel) );
      instance.SetDelete(&delete_MERunPanel);
      instance.SetDeleteArray(&deleteArray_MERunPanel);
      instance.SetDestructor(&destruct_MERunPanel);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MERunPanel*)
   {
      return GenerateInitInstanceLocal((::MERunPanel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MERunPanel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MEChanPanel_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_MEChanPanel(void *p);
   static void deleteArray_MEChanPanel(void *p);
   static void destruct_MEChanPanel(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MEChanPanel*)
   {
      ::MEChanPanel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MEChanPanel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MEChanPanel", ::MEChanPanel::Class_Version(), "src/MEChanPanel.hh", 13,
                  typeid(::MEChanPanel), DefineBehavior(ptr, ptr),
                  &::MEChanPanel::Dictionary, isa_proxy, 4,
                  sizeof(::MEChanPanel) );
      instance.SetDelete(&delete_MEChanPanel);
      instance.SetDeleteArray(&deleteArray_MEChanPanel);
      instance.SetDestructor(&destruct_MEChanPanel);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MEChanPanel*)
   {
      return GenerateInitInstanceLocal((::MEChanPanel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MEChanPanel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MELeafPanel_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_MELeafPanel(void *p);
   static void deleteArray_MELeafPanel(void *p);
   static void destruct_MELeafPanel(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MELeafPanel*)
   {
      ::MELeafPanel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MELeafPanel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MELeafPanel", ::MELeafPanel::Class_Version(), "src/MELeafPanel.hh", 13,
                  typeid(::MELeafPanel), DefineBehavior(ptr, ptr),
                  &::MELeafPanel::Dictionary, isa_proxy, 4,
                  sizeof(::MELeafPanel) );
      instance.SetDelete(&delete_MELeafPanel);
      instance.SetDeleteArray(&deleteArray_MELeafPanel);
      instance.SetDestructor(&destruct_MELeafPanel);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MELeafPanel*)
   {
      return GenerateInitInstanceLocal((::MELeafPanel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MELeafPanel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MEMultiVarPanel_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_MEMultiVarPanel(void *p);
   static void deleteArray_MEMultiVarPanel(void *p);
   static void destruct_MEMultiVarPanel(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MEMultiVarPanel*)
   {
      ::MEMultiVarPanel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MEMultiVarPanel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MEMultiVarPanel", ::MEMultiVarPanel::Class_Version(), "src/MEMultiVarPanel.hh", 18,
                  typeid(::MEMultiVarPanel), DefineBehavior(ptr, ptr),
                  &::MEMultiVarPanel::Dictionary, isa_proxy, 4,
                  sizeof(::MEMultiVarPanel) );
      instance.SetDelete(&delete_MEMultiVarPanel);
      instance.SetDeleteArray(&deleteArray_MEMultiVarPanel);
      instance.SetDestructor(&destruct_MEMultiVarPanel);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MEMultiVarPanel*)
   {
      return GenerateInitInstanceLocal((::MEMultiVarPanel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MEMultiVarPanel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MusEcalGUI_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MusEcalGUI(void *p = 0);
   static void *newArray_MusEcalGUI(Long_t size, void *p);
   static void delete_MusEcalGUI(void *p);
   static void deleteArray_MusEcalGUI(void *p);
   static void destruct_MusEcalGUI(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MusEcalGUI*)
   {
      ::MusEcalGUI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MusEcalGUI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MusEcalGUI", ::MusEcalGUI::Class_Version(), "src/MusEcalGUI.hh", 61,
                  typeid(::MusEcalGUI), DefineBehavior(ptr, ptr),
                  &::MusEcalGUI::Dictionary, isa_proxy, 4,
                  sizeof(::MusEcalGUI) );
      instance.SetNew(&new_MusEcalGUI);
      instance.SetNewArray(&newArray_MusEcalGUI);
      instance.SetDelete(&delete_MusEcalGUI);
      instance.SetDeleteArray(&deleteArray_MusEcalGUI);
      instance.SetDestructor(&destruct_MusEcalGUI);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MusEcalGUI*)
   {
      return GenerateInitInstanceLocal((::MusEcalGUI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MusEcalGUI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *MERun::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MERun::Class_Name()
{
   return "MERun";
}

//______________________________________________________________________________
const char *MERun::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MERun*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MERun::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MERun*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MERun::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MERun*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MERun::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MERun*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MERunManager::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MERunManager::Class_Name()
{
   return "MERunManager";
}

//______________________________________________________________________________
const char *MERunManager::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MERunManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MERunManager::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MERunManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MERunManager::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MERunManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MERunManager::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MERunManager*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MusEcal::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MusEcal::Class_Name()
{
   return "MusEcal";
}

//______________________________________________________________________________
const char *MusEcal::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MusEcal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MusEcal::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MusEcal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MusEcal::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MusEcal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MusEcal::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MusEcal*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MEVarVector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MEVarVector::Class_Name()
{
   return "MEVarVector";
}

//______________________________________________________________________________
const char *MEVarVector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MEVarVector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MEVarVector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MEVarVector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MEVarVector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MEVarVector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MEVarVector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MEVarVector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *METimeInterval::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *METimeInterval::Class_Name()
{
   return "METimeInterval";
}

//______________________________________________________________________________
const char *METimeInterval::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::METimeInterval*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int METimeInterval::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::METimeInterval*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void METimeInterval::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::METimeInterval*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *METimeInterval::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::METimeInterval*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MECanvasHolder::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MECanvasHolder::Class_Name()
{
   return "MECanvasHolder";
}

//______________________________________________________________________________
const char *MECanvasHolder::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MECanvasHolder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MECanvasHolder::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MECanvasHolder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MECanvasHolder::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MECanvasHolder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MECanvasHolder::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MECanvasHolder*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MEEBDisplay::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MEEBDisplay::Class_Name()
{
   return "MEEBDisplay";
}

//______________________________________________________________________________
const char *MEEBDisplay::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MEEBDisplay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MEEBDisplay::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MEEBDisplay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MEEBDisplay::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MEEBDisplay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MEEBDisplay::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MEEBDisplay*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MEEEDisplay::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MEEEDisplay::Class_Name()
{
   return "MEEEDisplay";
}

//______________________________________________________________________________
const char *MEEEDisplay::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MEEEDisplay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MEEEDisplay::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MEEEDisplay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MEEEDisplay::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MEEEDisplay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MEEEDisplay::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MEEEDisplay*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MEClickableCanvas::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MEClickableCanvas::Class_Name()
{
   return "MEClickableCanvas";
}

//______________________________________________________________________________
const char *MEClickableCanvas::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MEClickableCanvas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MEClickableCanvas::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MEClickableCanvas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MEClickableCanvas::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MEClickableCanvas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MEClickableCanvas::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MEClickableCanvas*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MEPlotWindow::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MEPlotWindow::Class_Name()
{
   return "MEPlotWindow";
}

//______________________________________________________________________________
const char *MEPlotWindow::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MEPlotWindow*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MEPlotWindow::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MEPlotWindow*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MEPlotWindow::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MEPlotWindow*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MEPlotWindow::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MEPlotWindow*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MERunPanel::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MERunPanel::Class_Name()
{
   return "MERunPanel";
}

//______________________________________________________________________________
const char *MERunPanel::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MERunPanel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MERunPanel::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MERunPanel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MERunPanel::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MERunPanel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MERunPanel::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MERunPanel*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MEChanPanel::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MEChanPanel::Class_Name()
{
   return "MEChanPanel";
}

//______________________________________________________________________________
const char *MEChanPanel::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MEChanPanel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MEChanPanel::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MEChanPanel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MEChanPanel::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MEChanPanel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MEChanPanel::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MEChanPanel*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MELeafPanel::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MELeafPanel::Class_Name()
{
   return "MELeafPanel";
}

//______________________________________________________________________________
const char *MELeafPanel::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MELeafPanel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MELeafPanel::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MELeafPanel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MELeafPanel::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MELeafPanel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MELeafPanel::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MELeafPanel*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MEMultiVarPanel::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MEMultiVarPanel::Class_Name()
{
   return "MEMultiVarPanel";
}

//______________________________________________________________________________
const char *MEMultiVarPanel::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MEMultiVarPanel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MEMultiVarPanel::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MEMultiVarPanel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MEMultiVarPanel::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MEMultiVarPanel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MEMultiVarPanel::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MEMultiVarPanel*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *MusEcalGUI::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MusEcalGUI::Class_Name()
{
   return "MusEcalGUI";
}

//______________________________________________________________________________
const char *MusEcalGUI::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MusEcalGUI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MusEcalGUI::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MusEcalGUI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MusEcalGUI::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MusEcalGUI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MusEcalGUI::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MusEcalGUI*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void MERun::Streamer(TBuffer &R__b)
{
   // Stream an object of class MERun.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MERun::Class(),this);
   } else {
      R__b.WriteClassBuffer(MERun::Class(),this);
   }
}

//______________________________________________________________________________
void MERun::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MERun.
      TClass *R__cl = ::MERun::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_header", (void*)&_header);
      ::ROOT::GenericShowMembers("ME::Header", (void*)&_header, R__insp, strcat(R__parent,"_header."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_settings", (void*)&_settings);
      ::ROOT::GenericShowMembers("ME::Settings", (void*)&_settings, R__insp, strcat(R__parent,"_settings."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_type", &_type);
      R__insp.Inspect(R__cl, R__parent, "_color", &_color);
      R__insp.Inspect(R__cl, R__parent, "_fname", &_fname);
      _fname.ShowMembers(R__insp, strcat(R__parent,"_fname.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*_file", &_file);
      R__insp.Inspect(R__cl, R__parent, "_h", (void*)&_h);
      ::ROOT::GenericShowMembers("map<TString,TH2*>", (void*)&_h, R__insp, strcat(R__parent,"_h."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*pn_t", &pn_t);
      R__insp.Inspect(R__cl, R__parent, "pn_i", (void*)&pn_i);
      ::ROOT::GenericShowMembers("map<TString,unsigned int>", (void*)&pn_i, R__insp, strcat(R__parent,"pn_i."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "pn_d", (void*)&pn_d);
      ::ROOT::GenericShowMembers("map<TString,float>", (void*)&pn_d, R__insp, strcat(R__parent,"pn_d."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*mtq_t", &mtq_t);
      R__insp.Inspect(R__cl, R__parent, "mtq_i", (void*)&mtq_i);
      ::ROOT::GenericShowMembers("map<TString,unsigned int>", (void*)&mtq_i, R__insp, strcat(R__parent,"mtq_i."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mtq_d", (void*)&mtq_d);
      ::ROOT::GenericShowMembers("map<TString,float>", (void*)&mtq_d, R__insp, strcat(R__parent,"mtq_d."),false);
      R__parent[R__ncp] = 0;
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MERun(void *p) {
      delete ((::MERun*)p);
   }
   static void deleteArray_MERun(void *p) {
      delete [] ((::MERun*)p);
   }
   static void destruct_MERun(void *p) {
      typedef ::MERun current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MERun

//______________________________________________________________________________
void MERunManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class MERunManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MERunManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(MERunManager::Class(),this);
   }
}

//______________________________________________________________________________
void MERunManager::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MERunManager.
      TClass *R__cl = ::MERunManager::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_lmr", &_lmr);
      R__insp.Inspect(R__cl, R__parent, "_reg", &_reg);
      R__insp.Inspect(R__cl, R__parent, "_sm", &_sm);
      R__insp.Inspect(R__cl, R__parent, "_dcc", &_dcc);
      R__insp.Inspect(R__cl, R__parent, "_side", &_side);
      R__insp.Inspect(R__cl, R__parent, "_type", &_type);
      R__insp.Inspect(R__cl, R__parent, "_color", &_color);
      R__insp.Inspect(R__cl, R__parent, "_lmdataPath", &_lmdataPath);
      _lmdataPath.ShowMembers(R__insp, strcat(R__parent,"_lmdataPath.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_primPath", &_primPath);
      _primPath.ShowMembers(R__insp, strcat(R__parent,"_primPath.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_runs", (void*)&_runs);
      ::ROOT::GenericShowMembers("MusEcal::RunMap", (void*)&_runs, R__insp, strcat(R__parent,"_runs."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_first", &_first);
      R__insp.Inspect(R__cl, R__parent, "_last", &_last);
      R__insp.Inspect(R__cl, R__parent, "_current", &_current);
      R__insp.Inspect(R__cl, R__parent, "_normFirst", &_normFirst);
      R__insp.Inspect(R__cl, R__parent, "_normLast", &_normLast);
      R__insp.Inspect(R__cl, R__parent, "_badRuns", (void*)&_badRuns);
      ::ROOT::GenericShowMembers("MusEcal::BoolTimeMap", (void*)&_badRuns, R__insp, strcat(R__parent,"_badRuns."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_apdMap", (void*)&_apdMap);
      ::ROOT::GenericShowMembers("map<MEChannel*,MEVarVector*>", (void*)&_apdMap, R__insp, strcat(R__parent,"_apdMap."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_pnMap[2]", _pnMap);
      R__insp.Inspect(R__cl, R__parent, "_mtqMap", (void*)&_mtqMap);
      ::ROOT::GenericShowMembers("map<MEChannel*,MEVarVector*>", (void*)&_mtqMap, R__insp, strcat(R__parent,"_mtqMap."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*_tree", &_tree);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MERunManager(void *p) {
      delete ((::MERunManager*)p);
   }
   static void deleteArray_MERunManager(void *p) {
      delete [] ((::MERunManager*)p);
   }
   static void destruct_MERunManager(void *p) {
      typedef ::MERunManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MERunManager

//______________________________________________________________________________
void METimeInterval::Streamer(TBuffer &R__b)
{
   // Stream an object of class METimeInterval.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(METimeInterval::Class(),this);
   } else {
      R__b.WriteClassBuffer(METimeInterval::Class(),this);
   }
}

//______________________________________________________________________________
void METimeInterval::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class METimeInterval.
      TClass *R__cl = ::METimeInterval::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_firstTime", &_firstTime);
      R__insp.Inspect(R__cl, R__parent, "_lastTime", &_lastTime);
      R__insp.Inspect(R__cl, R__parent, "*_previous", &_previous);
      R__insp.Inspect(R__cl, R__parent, "*_next", &_next);
      R__insp.Inspect(R__cl, R__parent, "*_above", &_above);
      R__insp.Inspect(R__cl, R__parent, "*_below", &_below);
      R__insp.Inspect(R__cl, R__parent, "_level", &_level);
      R__insp.Inspect(R__cl, R__parent, "_good", &_good);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_METimeInterval(void *p) {
      delete ((::METimeInterval*)p);
   }
   static void deleteArray_METimeInterval(void *p) {
      delete [] ((::METimeInterval*)p);
   }
   static void destruct_METimeInterval(void *p) {
      typedef ::METimeInterval current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::METimeInterval

//______________________________________________________________________________
void MusEcal::Streamer(TBuffer &R__b)
{
   // Stream an object of class MusEcal.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MusEcal::Class(),this);
   } else {
      R__b.WriteClassBuffer(MusEcal::Class(),this);
   }
}

//______________________________________________________________________________
void MusEcal::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MusEcal.
      TClass *R__cl = ::MusEcal::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_runMgr", (void*)&_runMgr);
      ::ROOT::GenericShowMembers("map<TString,MERunManager*>", (void*)&_runMgr, R__insp, strcat(R__parent,"_runMgr."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_lmr", &_lmr);
      R__insp.Inspect(R__cl, R__parent, "_type", &_type);
      R__insp.Inspect(R__cl, R__parent, "_color", &_color);
      R__insp.Inspect(R__cl, R__parent, "*_leaf", &_leaf);
      R__insp.Inspect(R__cl, R__parent, "_ig", &_ig);
      R__insp.Inspect(R__cl, R__parent, "_time", &_time);
      R__insp.Inspect(R__cl, R__parent, "_var", &_var);
      R__insp.Inspect(R__cl, R__parent, "_zoom", &_zoom);
      R__insp.Inspect(R__cl, R__parent, "_debug", &_debug);
      R__insp.Inspect(R__cl, R__parent, "_isGUI", &_isGUI);
      R__insp.Inspect(R__cl, R__parent, "_histoBooked", &_histoBooked);
      R__insp.Inspect(R__cl, R__parent, "_ebHistoBooked", &_ebHistoBooked);
      R__insp.Inspect(R__cl, R__parent, "_eeHistoBooked", &_eeHistoBooked);
      R__insp.Inspect(R__cl, R__parent, "*_febgeom", &_febgeom);
      R__insp.Inspect(R__cl, R__parent, "*_eb_h", &_eb_h);
      R__insp.Inspect(R__cl, R__parent, "*_eb_loc_h", &_eb_loc_h);
      R__insp.Inspect(R__cl, R__parent, "_eb_m", (void*)&_eb_m);
      ::ROOT::GenericShowMembers("map<TString,TH1*>", (void*)&_eb_m, R__insp, strcat(R__parent,"_eb_m."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_eb_loc_m", (void*)&_eb_loc_m);
      ::ROOT::GenericShowMembers("map<TString,TH1*>", (void*)&_eb_loc_m, R__insp, strcat(R__parent,"_eb_loc_m."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*_feegeom", &_feegeom);
      R__insp.Inspect(R__cl, R__parent, "*_ee_h", &_ee_h);
      R__insp.Inspect(R__cl, R__parent, "*_ee_loc_h[10]", &_ee_loc_h);
      R__insp.Inspect(R__cl, R__parent, "_ee_m", (void*)&_ee_m);
      ::ROOT::GenericShowMembers("map<TString,TH1*>", (void*)&_ee_m, R__insp, strcat(R__parent,"_ee_m."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_ee_loc_m", (void*)&_ee_loc_m);
      ::ROOT::GenericShowMembers("map<TString,TH1*>", (void*)&_ee_loc_m, R__insp, strcat(R__parent,"_ee_loc_m."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_eb_nbin", (void*)&_eb_nbin);
      ::ROOT::GenericShowMembers("map<TString,int>", (void*)&_eb_nbin, R__insp, strcat(R__parent,"_eb_nbin."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_eb_min", (void*)&_eb_min);
      ::ROOT::GenericShowMembers("map<TString,float>", (void*)&_eb_min, R__insp, strcat(R__parent,"_eb_min."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_eb_max", (void*)&_eb_max);
      ::ROOT::GenericShowMembers("map<TString,float>", (void*)&_eb_max, R__insp, strcat(R__parent,"_eb_max."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_ee_nbin", (void*)&_ee_nbin);
      ::ROOT::GenericShowMembers("map<TString,int>", (void*)&_ee_nbin, R__insp, strcat(R__parent,"_ee_nbin."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_ee_min", (void*)&_ee_min);
      ::ROOT::GenericShowMembers("map<TString,float>", (void*)&_ee_min, R__insp, strcat(R__parent,"_ee_min."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_ee_max", (void*)&_ee_max);
      ::ROOT::GenericShowMembers("map<TString,float>", (void*)&_ee_max, R__insp, strcat(R__parent,"_ee_max."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*_seq_t", &_seq_t);
      R__insp.Inspect(R__cl, R__parent, "_seq_run", &_seq_run);
      R__insp.Inspect(R__cl, R__parent, "_seq_lb", &_seq_lb);
      R__insp.Inspect(R__cl, R__parent, "_seq_tbeg", &_seq_tbeg);
      R__insp.Inspect(R__cl, R__parent, "_seq_tlmr[92]", _seq_tlmr);
      R__insp.Inspect(R__cl, R__parent, "*b_seq_run", &b_seq_run);
      R__insp.Inspect(R__cl, R__parent, "*b_seq_lb", &b_seq_lb);
      R__insp.Inspect(R__cl, R__parent, "*b_seq_tbeg", &b_seq_tbeg);
      R__insp.Inspect(R__cl, R__parent, "*b_seq_tlmr[92]", &b_seq_tlmr);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MusEcal(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MusEcal : new ::MusEcal;
   }
   static void *newArray_MusEcal(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MusEcal[nElements] : new ::MusEcal[nElements];
   }
   // Wrapper around operator delete
   static void delete_MusEcal(void *p) {
      delete ((::MusEcal*)p);
   }
   static void deleteArray_MusEcal(void *p) {
      delete [] ((::MusEcal*)p);
   }
   static void destruct_MusEcal(void *p) {
      typedef ::MusEcal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MusEcal

//______________________________________________________________________________
void MusEcalGUI::Streamer(TBuffer &R__b)
{
   // Stream an object of class MusEcalGUI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MusEcalGUI::Class(),this);
   } else {
      R__b.WriteClassBuffer(MusEcalGUI::Class(),this);
   }
}

//______________________________________________________________________________
void MusEcalGUI::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MusEcalGUI.
      TClass *R__cl = ::MusEcalGUI::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*_fRunPanel", &_fRunPanel);
      R__insp.Inspect(R__cl, R__parent, "*_fChanPanel", &_fChanPanel);
      R__insp.Inspect(R__cl, R__parent, "*_fLeafPanel", &_fLeafPanel);
      R__insp.Inspect(R__cl, R__parent, "*_fMultiVarPanel", &_fMultiVarPanel);
      R__insp.Inspect(R__cl, R__parent, "_ihtype", &_ihtype);
      R__insp.Inspect(R__cl, R__parent, "_icateg", &_icateg);
      R__insp.Inspect(R__cl, R__parent, "_ihist", &_ihist);
      R__insp.Inspect(R__cl, R__parent, "_psdir", &_psdir);
      _psdir.ShowMembers(R__insp, strcat(R__parent,"_psdir.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_normalize", &_normalize);
      R__insp.Inspect(R__cl, R__parent, "_historyType", &_historyType);
      R__insp.Inspect(R__cl, R__parent, "_window", (void*)&_window);
      ::ROOT::GenericShowMembers("map<TString,MEPlotWindow*>", (void*)&_window, R__insp, strcat(R__parent,"_window."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fMenuBarLayout", &fMenuBarLayout);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBarItemLayout", &fMenuBarItemLayout);
      R__insp.Inspect(R__cl, R__parent, "*fL1", &fL1);
      R__insp.Inspect(R__cl, R__parent, "*fL2", &fL2);
      R__insp.Inspect(R__cl, R__parent, "*fL5", &fL5);
      R__insp.Inspect(R__cl, R__parent, "*fLb", &fLb);
      R__insp.Inspect(R__cl, R__parent, "*fL8", &fL8);
      R__insp.Inspect(R__cl, R__parent, "*fMenuDock", &fMenuDock);
      R__insp.Inspect(R__cl, R__parent, "*fMenuBar", &fMenuBar);
      R__insp.Inspect(R__cl, R__parent, "*f_File_Menu", &f_File_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_Hist_Menu", &f_Hist_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_Laser_Menu", &f_Laser_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_APD_Menu", &f_APD_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_PN_Menu", &f_PN_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_MTQ_Menu", &f_MTQ_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_APD_Hist_Menu[6]", &f_APD_Hist_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_PN_Hist_Menu[6]", &f_PN_Hist_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_MTQ_Hist_Menu[6]", &f_MTQ_Hist_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_TP_Menu", &f_TP_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_TPAPD_Gain_Menu", &f_TPAPD_Gain_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_TPPN_Gain_Menu", &f_TPPN_Gain_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_TPAPD_Hist_Menu", &f_TPAPD_Hist_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_TPPN_Hist_Menu", &f_TPPN_Hist_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_Channel_Menu", &f_Channel_Menu);
      R__insp.Inspect(R__cl, R__parent, "f_tree_menu", (void*)&f_tree_menu);
      ::ROOT::GenericShowMembers("vector<TGPopupMenu*>", (void*)&f_tree_menu, R__insp, strcat(R__parent,"f_tree_menu."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*f_History_Menu", &f_History_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_History_L_Menu", &f_History_L_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_History_TPV_Menu", &f_History_TPV_Menu);
      R__insp.Inspect(R__cl, R__parent, "*f_History_LV_Menu[6]", &f_History_LV_Menu);
      R__insp.Inspect(R__cl, R__parent, "*fHFrame1", &fHFrame1);
      R__insp.Inspect(R__cl, R__parent, "*fHFrame2", &fHFrame2);
      R__insp.Inspect(R__cl, R__parent, "*fVFrame", &fVFrame);
      R__insp.Inspect(R__cl, R__parent, "*fEcanvas", &fEcanvas);
      R__insp.Inspect(R__cl, R__parent, "*_curPad", &_curPad);
      TGMainFrame::ShowMembers(R__insp, R__parent);
      MECanvasHolder::ShowMembers(R__insp, R__parent);
      MusEcal::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MusEcalGUI(void *p) {
      return  p ? new(p) ::MusEcalGUI : new ::MusEcalGUI;
   }
   static void *newArray_MusEcalGUI(Long_t nElements, void *p) {
      return p ? new(p) ::MusEcalGUI[nElements] : new ::MusEcalGUI[nElements];
   }
   // Wrapper around operator delete
   static void delete_MusEcalGUI(void *p) {
      delete ((::MusEcalGUI*)p);
   }
   static void deleteArray_MusEcalGUI(void *p) {
      delete [] ((::MusEcalGUI*)p);
   }
   static void destruct_MusEcalGUI(void *p) {
      typedef ::MusEcalGUI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MusEcalGUI

//______________________________________________________________________________
void MEVarVector::Streamer(TBuffer &R__b)
{
   // Stream an object of class MEVarVector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MEVarVector::Class(),this);
   } else {
      R__b.WriteClassBuffer(MEVarVector::Class(),this);
   }
}

//______________________________________________________________________________
void MEVarVector::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MEVarVector.
      TClass *R__cl = ::MEVarVector::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_size", &_size);
      R__insp.Inspect(R__cl, R__parent, "_map", (void*)&_map);
      ::ROOT::GenericShowMembers("MusEcal::VarVecTimeMap", (void*)&_map, R__insp, strcat(R__parent,"_map."),false);
      R__parent[R__ncp] = 0;
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MEVarVector(void *p) {
      delete ((::MEVarVector*)p);
   }
   static void deleteArray_MEVarVector(void *p) {
      delete [] ((::MEVarVector*)p);
   }
   static void destruct_MEVarVector(void *p) {
      typedef ::MEVarVector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MEVarVector

//______________________________________________________________________________
void MEEBDisplay::Streamer(TBuffer &R__b)
{
   // Stream an object of class MEEBDisplay.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MEEBDisplay::Class(),this);
   } else {
      R__b.WriteClassBuffer(MEEBDisplay::Class(),this);
   }
}

//______________________________________________________________________________
void MEEBDisplay::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MEEBDisplay.
      TClass *R__cl = ::MEEBDisplay::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MEEBDisplay(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MEEBDisplay : new ::MEEBDisplay;
   }
   static void *newArray_MEEBDisplay(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MEEBDisplay[nElements] : new ::MEEBDisplay[nElements];
   }
   // Wrapper around operator delete
   static void delete_MEEBDisplay(void *p) {
      delete ((::MEEBDisplay*)p);
   }
   static void deleteArray_MEEBDisplay(void *p) {
      delete [] ((::MEEBDisplay*)p);
   }
   static void destruct_MEEBDisplay(void *p) {
      typedef ::MEEBDisplay current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MEEBDisplay

//______________________________________________________________________________
void MEEEDisplay::Streamer(TBuffer &R__b)
{
   // Stream an object of class MEEEDisplay.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MEEEDisplay::Class(),this);
   } else {
      R__b.WriteClassBuffer(MEEEDisplay::Class(),this);
   }
}

//______________________________________________________________________________
void MEEEDisplay::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MEEEDisplay.
      TClass *R__cl = ::MEEEDisplay::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MEEEDisplay(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MEEEDisplay : new ::MEEEDisplay;
   }
   static void *newArray_MEEEDisplay(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MEEEDisplay[nElements] : new ::MEEEDisplay[nElements];
   }
   // Wrapper around operator delete
   static void delete_MEEEDisplay(void *p) {
      delete ((::MEEEDisplay*)p);
   }
   static void deleteArray_MEEEDisplay(void *p) {
      delete [] ((::MEEEDisplay*)p);
   }
   static void destruct_MEEEDisplay(void *p) {
      typedef ::MEEEDisplay current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MEEEDisplay

//______________________________________________________________________________
void MECanvasHolder::Streamer(TBuffer &R__b)
{
   // Stream an object of class MECanvasHolder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MECanvasHolder::Class(),this);
   } else {
      R__b.WriteClassBuffer(MECanvasHolder::Class(),this);
   }
}

//______________________________________________________________________________
void MECanvasHolder::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MECanvasHolder.
      TClass *R__cl = ::MECanvasHolder::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fCanvas", &fCanvas);
      R__insp.Inspect(R__cl, R__parent, "*fPad", &fPad);
      R__insp.Inspect(R__cl, R__parent, "fTopXGen", &fTopXGen);
      R__insp.Inspect(R__cl, R__parent, "fTopYGen", &fTopYGen);
      R__insp.Inspect(R__cl, R__parent, "fWidthGen", &fWidthGen);
      R__insp.Inspect(R__cl, R__parent, "fHeigthGen", &fHeigthGen);
      R__insp.Inspect(R__cl, R__parent, "fDate", &fDate);
      fDate.ShowMembers(R__insp, strcat(R__parent,"fDate.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fTime", &fTime);
      fTime.ShowMembers(R__insp, strcat(R__parent,"fTime.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*fWelcomePave", &fWelcomePave);
      R__insp.Inspect(R__cl, R__parent, "fWelcomeState", &fWelcomeState);
      R__insp.Inspect(R__cl, R__parent, "*fWelcomeTitle", &fWelcomeTitle);
      R__insp.Inspect(R__cl, R__parent, "*fWelcomeL0", &fWelcomeL0);
      R__insp.Inspect(R__cl, R__parent, "*fTexTL", &fTexTL);
      R__insp.Inspect(R__cl, R__parent, "*fTexTR", &fTexTR);
      R__insp.Inspect(R__cl, R__parent, "*fTexBL", &fTexBL);
      R__insp.Inspect(R__cl, R__parent, "*fTexBR", &fTexBR);
      R__insp.Inspect(R__cl, R__parent, "_px", &_px);
      R__insp.Inspect(R__cl, R__parent, "_py", &_py);
      R__insp.Inspect(R__cl, R__parent, "_x", &_x);
      R__insp.Inspect(R__cl, R__parent, "_y", &_y);
      R__insp.Inspect(R__cl, R__parent, "*_h", &_h);
      R__insp.Inspect(R__cl, R__parent, "_scale", &_scale);
      R__insp.Inspect(R__cl, R__parent, "_refw", &_refw);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MECanvasHolder(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MECanvasHolder : new ::MECanvasHolder;
   }
   static void *newArray_MECanvasHolder(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MECanvasHolder[nElements] : new ::MECanvasHolder[nElements];
   }
   // Wrapper around operator delete
   static void delete_MECanvasHolder(void *p) {
      delete ((::MECanvasHolder*)p);
   }
   static void deleteArray_MECanvasHolder(void *p) {
      delete [] ((::MECanvasHolder*)p);
   }
   static void destruct_MECanvasHolder(void *p) {
      typedef ::MECanvasHolder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MECanvasHolder

//______________________________________________________________________________
void MEClickableCanvas::Streamer(TBuffer &R__b)
{
   // Stream an object of class MEClickableCanvas.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MEClickableCanvas::Class(),this);
   } else {
      R__b.WriteClassBuffer(MEClickableCanvas::Class(),this);
   }
}

//______________________________________________________________________________
void MEClickableCanvas::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MEClickableCanvas.
      TClass *R__cl = ::MEClickableCanvas::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*_gui", &_gui);
      TRootEmbeddedCanvas::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MEClickableCanvas(void *p) {
      delete ((::MEClickableCanvas*)p);
   }
   static void deleteArray_MEClickableCanvas(void *p) {
      delete [] ((::MEClickableCanvas*)p);
   }
   static void destruct_MEClickableCanvas(void *p) {
      typedef ::MEClickableCanvas current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MEClickableCanvas

//______________________________________________________________________________
void MEPlotWindow::Streamer(TBuffer &R__b)
{
   // Stream an object of class MEPlotWindow.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MEPlotWindow::Class(),this);
   } else {
      R__b.WriteClassBuffer(MEPlotWindow::Class(),this);
   }
}

//______________________________________________________________________________
void MEPlotWindow::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MEPlotWindow.
      TClass *R__cl = ::MEPlotWindow::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*_gui", &_gui);
      R__insp.Inspect(R__cl, R__parent, "*fMain", &fMain);
      R__insp.Inspect(R__cl, R__parent, "fClose", &fClose);
      R__insp.Inspect(R__cl, R__parent, "*fHFrame", &fHFrame);
      R__insp.Inspect(R__cl, R__parent, "*fEcanvas", &fEcanvas);
      R__insp.Inspect(R__cl, R__parent, "_name", &_name);
      _name.ShowMembers(R__insp, strcat(R__parent,"_name.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_printName", &_printName);
      _printName.ShowMembers(R__insp, strcat(R__parent,"_printName.")); R__parent[R__ncp] = 0;
      MECanvasHolder::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MEPlotWindow(void *p) {
      delete ((::MEPlotWindow*)p);
   }
   static void deleteArray_MEPlotWindow(void *p) {
      delete [] ((::MEPlotWindow*)p);
   }
   static void destruct_MEPlotWindow(void *p) {
      typedef ::MEPlotWindow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MEPlotWindow

//______________________________________________________________________________
void MERunPanel::Streamer(TBuffer &R__b)
{
   // Stream an object of class MERunPanel.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MERunPanel::Class(),this);
   } else {
      R__b.WriteClassBuffer(MERunPanel::Class(),this);
   }
}

//______________________________________________________________________________
void MERunPanel::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MERunPanel.
      TClass *R__cl = ::MERunPanel::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMain", &fMain);
      R__insp.Inspect(R__cl, R__parent, "*fVframe1", &fVframe1);
      R__insp.Inspect(R__cl, R__parent, "*f_Run_Group", &f_Run_Group);
      R__insp.Inspect(R__cl, R__parent, "*fHint1", &fHint1);
      R__insp.Inspect(R__cl, R__parent, "*fHint2", &fHint2);
      R__insp.Inspect(R__cl, R__parent, "*fHint3", &fHint3);
      R__insp.Inspect(R__cl, R__parent, "*f_RunList", &f_RunList);
      R__insp.Inspect(R__cl, R__parent, "*f_Range_Group", &f_Range_Group);
      R__insp.Inspect(R__cl, R__parent, "fClose", &fClose);
      R__insp.Inspect(R__cl, R__parent, "*_gui", &_gui);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MERunPanel(void *p) {
      delete ((::MERunPanel*)p);
   }
   static void deleteArray_MERunPanel(void *p) {
      delete [] ((::MERunPanel*)p);
   }
   static void destruct_MERunPanel(void *p) {
      typedef ::MERunPanel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MERunPanel

//______________________________________________________________________________
void MEChanPanel::Streamer(TBuffer &R__b)
{
   // Stream an object of class MEChanPanel.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MEChanPanel::Class(),this);
   } else {
      R__b.WriteClassBuffer(MEChanPanel::Class(),this);
   }
}

//______________________________________________________________________________
void MEChanPanel::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MEChanPanel.
      TClass *R__cl = ::MEChanPanel::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMain", &fMain);
      R__insp.Inspect(R__cl, R__parent, "*fHframe1", &fHframe1);
      R__insp.Inspect(R__cl, R__parent, "*f_Channel_Group", &f_Channel_Group);
      R__insp.Inspect(R__cl, R__parent, "*f_Channel_ID_Group", &f_Channel_ID_Group);
      R__insp.Inspect(R__cl, R__parent, "*f_Channel_XY_Group", &f_Channel_XY_Group);
      R__insp.Inspect(R__cl, R__parent, "*f_X_Group", &f_X_Group);
      R__insp.Inspect(R__cl, R__parent, "*f_Y_Group", &f_Y_Group);
      R__insp.Inspect(R__cl, R__parent, "*f_X", &f_X);
      R__insp.Inspect(R__cl, R__parent, "*f_Y", &f_Y);
      R__insp.Inspect(R__cl, R__parent, "*f_XY_Button", &f_XY_Button);
      R__insp.Inspect(R__cl, R__parent, "*f_X_Label", &f_X_Label);
      R__insp.Inspect(R__cl, R__parent, "*f_Y_Label", &f_Y_Label);
      R__insp.Inspect(R__cl, R__parent, "*f_ID_Group", &f_ID_Group);
      R__insp.Inspect(R__cl, R__parent, "*f_ID", &f_ID);
      R__insp.Inspect(R__cl, R__parent, "*f_ID_Button", &f_ID_Button);
      R__insp.Inspect(R__cl, R__parent, "*f_ID_Label", &f_ID_Label);
      R__insp.Inspect(R__cl, R__parent, "*fHint1", &fHint1);
      R__insp.Inspect(R__cl, R__parent, "*fHint2", &fHint2);
      R__insp.Inspect(R__cl, R__parent, "*fHint3", &fHint3);
      R__insp.Inspect(R__cl, R__parent, "*f_ChannelID", &f_ChannelID);
      R__insp.Inspect(R__cl, R__parent, "*f_Global_Group", &f_Global_Group);
      R__insp.Inspect(R__cl, R__parent, "*f_XYZ_Group", &f_XYZ_Group);
      R__insp.Inspect(R__cl, R__parent, "*f_XYZ_X_Group", &f_XYZ_X_Group);
      R__insp.Inspect(R__cl, R__parent, "*f_XYZ_Y_Group", &f_XYZ_Y_Group);
      R__insp.Inspect(R__cl, R__parent, "*f_XYZ_Z_Group", &f_XYZ_Z_Group);
      R__insp.Inspect(R__cl, R__parent, "*f_XYZ_X", &f_XYZ_X);
      R__insp.Inspect(R__cl, R__parent, "*f_XYZ_Y", &f_XYZ_Y);
      R__insp.Inspect(R__cl, R__parent, "*f_XYZ_Z", &f_XYZ_Z);
      R__insp.Inspect(R__cl, R__parent, "*f_XYZ_X_Label", &f_XYZ_X_Label);
      R__insp.Inspect(R__cl, R__parent, "*f_XYZ_Y_Label", &f_XYZ_Y_Label);
      R__insp.Inspect(R__cl, R__parent, "*f_XYZ_Z_Label", &f_XYZ_Z_Label);
      R__insp.Inspect(R__cl, R__parent, "*f_XYZ_Button", &f_XYZ_Button);
      R__insp.Inspect(R__cl, R__parent, "fClose", &fClose);
      R__insp.Inspect(R__cl, R__parent, "_channelID", &_channelID);
      R__insp.Inspect(R__cl, R__parent, "_iX", &_iX);
      R__insp.Inspect(R__cl, R__parent, "_iY", &_iY);
      R__insp.Inspect(R__cl, R__parent, "*_gui", &_gui);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MEChanPanel(void *p) {
      delete ((::MEChanPanel*)p);
   }
   static void deleteArray_MEChanPanel(void *p) {
      delete [] ((::MEChanPanel*)p);
   }
   static void destruct_MEChanPanel(void *p) {
      typedef ::MEChanPanel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MEChanPanel

//______________________________________________________________________________
void MELeafPanel::Streamer(TBuffer &R__b)
{
   // Stream an object of class MELeafPanel.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MELeafPanel::Class(),this);
   } else {
      R__b.WriteClassBuffer(MELeafPanel::Class(),this);
   }
}

//______________________________________________________________________________
void MELeafPanel::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MELeafPanel.
      TClass *R__cl = ::MELeafPanel::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMain", &fMain);
      R__insp.Inspect(R__cl, R__parent, "*fVframe1", &fVframe1);
      R__insp.Inspect(R__cl, R__parent, "*fHframe1", &fHframe1);
      R__insp.Inspect(R__cl, R__parent, "*fHframe2", &fHframe2);
      R__insp.Inspect(R__cl, R__parent, "*fVarBox", &fVarBox);
      R__insp.Inspect(R__cl, R__parent, "*fZoomBox", &fZoomBox);
      R__insp.Inspect(R__cl, R__parent, "*fPlotButton", &fPlotButton);
      R__insp.Inspect(R__cl, R__parent, "*fDiffPlotButton", &fDiffPlotButton);
      R__insp.Inspect(R__cl, R__parent, "*fOneLevelUpButton", &fOneLevelUpButton);
      R__insp.Inspect(R__cl, R__parent, "*fHint1", &fHint1);
      R__insp.Inspect(R__cl, R__parent, "*fHint2", &fHint2);
      R__insp.Inspect(R__cl, R__parent, "*fHint3", &fHint3);
      R__insp.Inspect(R__cl, R__parent, "*fHint4", &fHint4);
      R__insp.Inspect(R__cl, R__parent, "*fHint5", &fHint5);
      R__insp.Inspect(R__cl, R__parent, "*_gui", &_gui);
      R__insp.Inspect(R__cl, R__parent, "_type", &_type);
      R__insp.Inspect(R__cl, R__parent, "_color", &_color);
      R__insp.Inspect(R__cl, R__parent, "_var", &_var);
      R__insp.Inspect(R__cl, R__parent, "_zoom", &_zoom);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MELeafPanel(void *p) {
      delete ((::MELeafPanel*)p);
   }
   static void deleteArray_MELeafPanel(void *p) {
      delete [] ((::MELeafPanel*)p);
   }
   static void destruct_MELeafPanel(void *p) {
      typedef ::MELeafPanel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MELeafPanel

//______________________________________________________________________________
void MEMultiVarPanel::Streamer(TBuffer &R__b)
{
   // Stream an object of class MEMultiVarPanel.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MEMultiVarPanel::Class(),this);
   } else {
      R__b.WriteClassBuffer(MEMultiVarPanel::Class(),this);
   }
}

//______________________________________________________________________________
void MEMultiVarPanel::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MEMultiVarPanel.
      TClass *R__cl = ::MEMultiVarPanel::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fMain", &fMain);
      R__insp.Inspect(R__cl, R__parent, "*fHframe1", &fHframe1);
      R__insp.Inspect(R__cl, R__parent, "*fVframe1", &fVframe1);
      R__insp.Inspect(R__cl, R__parent, "*fVframe2", &fVframe2);
      R__insp.Inspect(R__cl, R__parent, "*fHint1", &fHint1);
      R__insp.Inspect(R__cl, R__parent, "*fHint2", &fHint2);
      R__insp.Inspect(R__cl, R__parent, "*fHint3", &fHint3);
      R__insp.Inspect(R__cl, R__parent, "*fHint4", &fHint4);
      R__insp.Inspect(R__cl, R__parent, "*fHint5", &fHint5);
      R__insp.Inspect(R__cl, R__parent, "f_ComboBox", (void*)&f_ComboBox);
      ::ROOT::GenericShowMembers("vector<TGComboBox*>", (void*)&f_ComboBox, R__insp, strcat(R__parent,"f_ComboBox."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "f_GroupFrame", (void*)&f_GroupFrame);
      ::ROOT::GenericShowMembers("vector<TGGroupFrame*>", (void*)&f_GroupFrame, R__insp, strcat(R__parent,"f_GroupFrame."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*f_Go_Button", &f_Go_Button);
      R__insp.Inspect(R__cl, R__parent, "fClose", &fClose);
      R__insp.Inspect(R__cl, R__parent, "*_gui", &_gui);
      R__insp.Inspect(R__cl, R__parent, "_type", &_type);
      R__insp.Inspect(R__cl, R__parent, "_color", &_color);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MEMultiVarPanel(void *p) {
      delete ((::MEMultiVarPanel*)p);
   }
   static void deleteArray_MEMultiVarPanel(void *p) {
      delete [] ((::MEMultiVarPanel*)p);
   }
   static void destruct_MEMultiVarPanel(void *p) {
      typedef ::MEMultiVarPanel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MEMultiVarPanel

/********************************************************
* src/MusEcal_dict_src.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMusEcal_dict_src();

extern "C" void G__set_cpp_environmentMusEcal_dict_src() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("src/MERun.hh");
  G__add_compiledheader("src/MERunManager.hh");
  G__add_compiledheader("src/METimeInterval.hh");
  G__add_compiledheader("src/MEVarVector.hh");
  G__add_compiledheader("src/MusEcal.hh");
  G__add_compiledheader("src/MECanvasHolder.hh");
  G__add_compiledheader("src/MEEBDisplay.hh");
  G__add_compiledheader("src/MEEEDisplay.hh");
  G__add_compiledheader("src/MusEcalGUI.hh");
  G__add_compiledheader("src/MEClickableCanvas.hh");
  G__add_compiledheader("src/MEPlotWindow.hh");
  G__add_compiledheader("src/MERunPanel.hh");
  G__add_compiledheader("src/MEChanPanel.hh");
  G__add_compiledheader("src/MELeafPanel.hh");
  G__add_compiledheader("src/MEMultiVarPanel.hh");
  G__cpp_reset_tagtableMusEcal_dict_src();
}
#include <new>
extern "C" int G__cpp_dllrevMusEcal_dict_src() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MERun */
static int G__MusEcal_dict_src_569_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MERun*) G__getstructoffset())->operator==(*(MERun*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MERun*) G__getstructoffset())->run());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MERun*) G__getstructoffset())->lb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MERun*) G__getstructoffset())->time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((const MERun*) G__getstructoffset())->timestamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const MERun*) G__getstructoffset())->rundir();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((MERun*) G__getstructoffset())->laserPrimFile((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((MERun*) G__getstructoffset())->laserPrimFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERun*) G__getstructoffset())->closeLaserPrimFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 102, (double) ((MERun*) G__getstructoffset())->getVal((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 102, (double) ((MERun*) G__getstructoffset())->getVal((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 102, (double) ((MERun*) G__getstructoffset())->getVal((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ME::Header* pobj;
         const ME::Header xobj = ((const MERun*) G__getstructoffset())->header();
         pobj = new ME::Header(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ME::Settings* pobj;
         const ME::Settings xobj = ((const MERun*) G__getstructoffset())->settings();
         pobj = new ME::Settings(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MERun*) G__getstructoffset())->print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MERun::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MERun::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MERun::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MERun::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MERun*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERun*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERun*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERun*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MERun::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MERun::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MERun::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_569_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MERun::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MusEcal_dict_src_569_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MERun* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MERun(*(MERun*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERun));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MERun G__TMERun;
static int G__MusEcal_dict_src_569_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MERun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MERun*) (soff+(sizeof(MERun)*i)))->~G__TMERun();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MERun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MERun*) (soff))->~G__TMERun();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MusEcal_dict_src_569_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MERun* dest = (MERun*) G__getstructoffset();
   *dest = *(MERun*) libp->para[0].ref;
   const MERun& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MERunManager */
static int G__MusEcal_dict_src_570_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MERunManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MERunManager(
(unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MERunManager(
(unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MERunManager((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MERunManager((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunManager*) G__getstructoffset())->updateRunList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         MusEcal::RunIterator* pobj;
         MusEcal::RunIterator xobj = ((MERunManager*) G__getstructoffset())->it();
         pobj = new MusEcal::RunIterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         MusEcal::RunIterator* pobj;
         MusEcal::RunIterator xobj = ((MERunManager*) G__getstructoffset())->it((ME::Time) G__int(libp->para[0]));
         pobj = new MusEcal::RunIterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         MusEcal::RunIterator* pobj;
         MusEcal::RunIterator xobj = ((MERunManager*) G__getstructoffset())->from((ME::Time) G__int(libp->para[0]));
         pobj = new MusEcal::RunIterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         MusEcal::RunIterator* pobj;
         MusEcal::RunIterator xobj = ((MERunManager*) G__getstructoffset())->to((ME::Time) G__int(libp->para[0]));
         pobj = new MusEcal::RunIterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         MusEcal::RunIterator* pobj;
         MusEcal::RunIterator xobj = ((MERunManager*) G__getstructoffset())->begin();
         pobj = new MusEcal::RunIterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         MusEcal::RunIterator* pobj;
         MusEcal::RunIterator xobj = ((MERunManager*) G__getstructoffset())->end();
         pobj = new MusEcal::RunIterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         MusEcal::RunIterator* pobj;
         MusEcal::RunIterator xobj = ((MERunManager*) G__getstructoffset())->first();
         pobj = new MusEcal::RunIterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         MusEcal::RunIterator* pobj;
         MusEcal::RunIterator xobj = ((MERunManager*) G__getstructoffset())->last();
         pobj = new MusEcal::RunIterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         MusEcal::RunIterator* pobj;
         MusEcal::RunIterator xobj = ((MERunManager*) G__getstructoffset())->cur();
         pobj = new MusEcal::RunIterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MERunManager*) G__getstructoffset())->beginKey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MERunManager*) G__getstructoffset())->endKey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MERunManager*) G__getstructoffset())->firstKey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MERunManager*) G__getstructoffset())->lastKey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MERunManager*) G__getstructoffset())->normFirstKey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MERunManager*) G__getstructoffset())->normLastKey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MERunManager*) G__getstructoffset())->curKey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((MERunManager*) G__getstructoffset())->closestKey((ME::Time) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((MERunManager*) G__getstructoffset())->closestKeyInFuture((ME::Time) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const MERunManager*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MERunManager*) G__getstructoffset())->beginRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MERunManager*) G__getstructoffset())->endRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MERunManager*) G__getstructoffset())->firstRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MERunManager*) G__getstructoffset())->lastRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MERunManager*) G__getstructoffset())->curRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MERunManager*) G__getstructoffset())->run((ME::Time) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MERunManager*) G__getstructoffset())->setCurrentRun((ME::Time) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunManager*) G__getstructoffset())->setNoCurrent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MERunManager*) G__getstructoffset())->setPlotRange((ME::Time) G__int(libp->para[0]), (ME::Time) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MERunManager*) G__getstructoffset())->setPlotRange((ME::Time) G__int(libp->para[0]), (ME::Time) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MERunManager*) G__getstructoffset())->setNormRange((ME::Time) G__int(libp->para[0]), (ME::Time) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MERunManager*) G__getstructoffset())->setNormRange((ME::Time) G__int(libp->para[0]), (ME::Time) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunManager*) G__getstructoffset())->setBadRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MERunManager*) G__getstructoffset())->setBadRange((ME::Time) G__int(libp->para[0]), (ME::Time) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MERunManager*) G__getstructoffset())->setBadRange((ME::Time) G__int(libp->para[0]), (ME::Time) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunManager*) G__getstructoffset())->refreshBadRuns();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MERunManager*) G__getstructoffset())->isGood((ME::Time) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MERunManager*) G__getstructoffset())->tree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunManager*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MERunManager*) G__getstructoffset())->LMRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunManager*) G__getstructoffset())->fillMaps();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunManager*) G__getstructoffset())->setFlags();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunManager*) G__getstructoffset())->setLaserFlags();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunManager*) G__getstructoffset())->setTestPulseFlags();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MERunManager*) G__getstructoffset())->apdVector((MEChannel*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MERunManager*) G__getstructoffset())->pnVector((MEChannel*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MERunManager*) G__getstructoffset())->mtqVector((MEChannel*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunManager*) G__getstructoffset())->setFlag((MEChannel*) G__int(libp->para[0]), (ME::Time) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunManager*) G__getstructoffset())->refresh();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MERunManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MERunManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MERunManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MERunManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MERunManager*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunManager*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunManager*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MERunManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MERunManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MERunManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_570_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MERunManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MusEcal_dict_src_570_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MERunManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MERunManager(*(MERunManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MERunManager G__TMERunManager;
static int G__MusEcal_dict_src_570_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MERunManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MERunManager*) (soff+(sizeof(MERunManager)*i)))->~G__TMERunManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MERunManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MERunManager*) (soff))->~G__TMERunManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MusEcal_dict_src_570_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MERunManager* dest = (MERunManager*) G__getstructoffset();
   *dest = *(MERunManager*) libp->para[0].ref;
   const MERunManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MusEcal */
static int G__MusEcal_dict_src_607_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = MusEcal::mgrName((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MusEcal* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MusEcal((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MusEcal((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MusEcal((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MusEcal((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MusEcal[n];
       } else {
         p = new((void*) gvp) MusEcal[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MusEcal;
       } else {
         p = new((void*) gvp) MusEcal;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MusEcal*) G__getstructoffset())->runMgr((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MusEcal*) G__getstructoffset())->runMgr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MusEcal*) G__getstructoffset())->curMgr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MusEcal*) G__getstructoffset())->setType((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MusEcal*) G__getstructoffset())->setType((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->setLMRegion((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->setTime((ME::Time) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->setChannel((MEChannel*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MusEcal*) G__getstructoffset())->setChannel((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MusEcal*) G__getstructoffset())->setChannel((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->oneLevelUp();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->setDefaultTime();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MusEcal*) G__getstructoffset())->setRunAndSequence((unsigned int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MusEcal*) G__getstructoffset())->setRunAndSequence((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MusEcal*) G__getstructoffset())->nextSequence());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MusEcal*) G__getstructoffset())->setVar((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MusEcal*) G__getstructoffset())->setVar();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->dumpVector((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->histConfig();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->bookHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->bookEBAPDHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->bookEBPNHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->bookEEAPDHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->bookEEPNHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->fillHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->fillEBGlobalHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->fillEBLocalHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->fillEEGlobalHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->fillEELocalHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->writeGlobalHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MusEcal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MusEcal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MusEcal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MusEcal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MusEcal*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MusEcal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MusEcal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MusEcal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_607_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MusEcal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MusEcal_dict_src_607_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MusEcal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MusEcal(*(MusEcal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MusEcal G__TMusEcal;
static int G__MusEcal_dict_src_607_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MusEcal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MusEcal*) (soff+(sizeof(MusEcal)*i)))->~G__TMusEcal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MusEcal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MusEcal*) (soff))->~G__TMusEcal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MusEcal_dict_src_607_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MusEcal* dest = (MusEcal*) G__getstructoffset();
   *dest = *(MusEcal*) libp->para[0].ref;
   const MusEcal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MEVarVector */
static int G__MusEcal_dict_src_674_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MEVarVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MEVarVector((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MEVarVector((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEVarVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEVarVector*) G__getstructoffset())->addTime((ME::Time) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MEVarVector*) G__getstructoffset())->setVal((ME::Time) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MEVarVector*) G__getstructoffset())->setVal((ME::Time) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MEVarVector*) G__getstructoffset())->setFlag((ME::Time) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MEVarVector*) G__getstructoffset())->setFlag((ME::Time) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MEVarVector*) G__getstructoffset())->setValAndFlag((ME::Time) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MEVarVector*) G__getstructoffset())->setValAndFlag((ME::Time) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MEVarVector*) G__getstructoffset())->getValByTime((ME::Time) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(bool*) G__Boolref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MEVarVector*) G__getstructoffset())->getTime(*(vector<ME::Time>*) libp->para[0].ref, (const METimeInterval*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MEVarVector*) G__getstructoffset())->getTime(*(vector<ME::Time>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEVarVector*) G__getstructoffset())->getValAndFlag((int) G__int(libp->para[0]), *(vector<ME::Time>*) libp->para[1].ref
, *(vector<float>*) libp->para[2].ref, *(vector<bool>*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MEVarVector*) G__getstructoffset())->getTimeValAndFlag((int) G__int(libp->para[0]), *(vector<ME::Time>*) libp->para[1].ref
, *(vector<float>*) libp->para[2].ref, *(vector<bool>*) libp->para[3].ref
, (const METimeInterval*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MEVarVector*) G__getstructoffset())->getTimeValAndFlag((int) G__int(libp->para[0]), *(vector<ME::Time>*) libp->para[1].ref
, *(vector<float>*) libp->para[2].ref, *(vector<bool>*) libp->para[3].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MEVarVector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEVarVector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MEVarVector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEVarVector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MEVarVector*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEVarVector*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEVarVector*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEVarVector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEVarVector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEVarVector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEVarVector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_674_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEVarVector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MusEcal_dict_src_674_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MEVarVector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MEVarVector(*(MEVarVector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEVarVector));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MEVarVector G__TMEVarVector;
static int G__MusEcal_dict_src_674_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MEVarVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MEVarVector*) (soff+(sizeof(MEVarVector)*i)))->~G__TMEVarVector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MEVarVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MEVarVector*) (soff))->~G__TMEVarVector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MusEcal_dict_src_674_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MEVarVector* dest = (MEVarVector*) G__getstructoffset();
   *dest = *(MEVarVector*) libp->para[0].ref;
   const MEVarVector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* METimeInterval */
static int G__MusEcal_dict_src_684_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   METimeInterval* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new METimeInterval((ME::Time) G__int(libp->para[0]), (ME::Time) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) METimeInterval((ME::Time) G__int(libp->para[0]), (ME::Time) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((METimeInterval*) G__getstructoffset())->split(*(list<ME::Time>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((METimeInterval*) G__getstructoffset())->get((ME::Time) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((METimeInterval*) G__getstructoffset())->get((ME::Time) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((METimeInterval*) G__getstructoffset())->first((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((METimeInterval*) G__getstructoffset())->last((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((METimeInterval*) G__getstructoffset())->level());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const METimeInterval*) G__getstructoffset())->firstTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const METimeInterval*) G__getstructoffset())->lastTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const METimeInterval*) G__getstructoffset())->isGood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((METimeInterval*) G__getstructoffset())->above());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((METimeInterval*) G__getstructoffset())->next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((METimeInterval*) G__getstructoffset())->previous());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((METimeInterval*) G__getstructoffset())->firstIn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((METimeInterval*) G__getstructoffset())->lastIn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((METimeInterval*) G__getstructoffset())->print((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((METimeInterval*) G__getstructoffset())->oneLine();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((METimeInterval*) G__getstructoffset())->inBrackets();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) METimeInterval::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) METimeInterval::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) METimeInterval::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      METimeInterval::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const METimeInterval*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((METimeInterval*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((METimeInterval*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((METimeInterval*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) METimeInterval::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) METimeInterval::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) METimeInterval::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_684_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) METimeInterval::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MusEcal_dict_src_684_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   METimeInterval* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new METimeInterval(*(METimeInterval*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef METimeInterval G__TMETimeInterval;
static int G__MusEcal_dict_src_684_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (METimeInterval*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((METimeInterval*) (soff+(sizeof(METimeInterval)*i)))->~G__TMETimeInterval();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (METimeInterval*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((METimeInterval*) (soff))->~G__TMETimeInterval();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MusEcal_dict_src_684_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   METimeInterval* dest = (METimeInterval*) G__getstructoffset();
   *dest = *(METimeInterval*) libp->para[0].ref;
   const METimeInterval& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MECanvasHolder */
static int G__MusEcal_dict_src_747_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MECanvasHolder*) G__getstructoffset())->setPxAndPy((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MECanvasHolder*) G__getstructoffset())->getPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MECanvasHolder*) G__getstructoffset())->setPad();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MECanvasHolder*) G__getstructoffset())->curHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MECanvasHolder*) G__getstructoffset())->setCurHist((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MECanvasHolder*) G__getstructoffset())->getCurXY(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MECanvasHolder*) G__getstructoffset())->setSessionStyle();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MECanvasHolder::setHistoStyle((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MECanvasHolder* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MECanvasHolder[n];
     } else {
       p = new((void*) gvp) MECanvasHolder[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MECanvasHolder;
     } else {
       p = new((void*) gvp) MECanvasHolder;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MECanvasHolder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MECanvasHolder*) G__getstructoffset())->SetCanvas((TCanvas*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MECanvasHolder*) G__getstructoffset())->SetCanvas((TCanvas*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MECanvasHolder*) G__getstructoffset())->SetCanvas((TCanvas*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MECanvasHolder*) G__getstructoffset())->SetCanvas((TCanvas*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MECanvasHolder*) G__getstructoffset())->SetCanvas((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MECanvasHolder*) G__getstructoffset())->CanvasModified();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MECanvasHolder*) G__getstructoffset())->ClearWelcome();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MECanvasHolder*) G__getstructoffset())->ShowWelcome((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MECanvasHolder*) G__getstructoffset())->ShowWelcome();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MECanvasHolder*) G__getstructoffset())->SetDate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MECanvasHolder*) G__getstructoffset())->setHessPalette();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MECanvasHolder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MECanvasHolder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MECanvasHolder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MECanvasHolder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MECanvasHolder*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MECanvasHolder*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MECanvasHolder*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MECanvasHolder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MECanvasHolder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MECanvasHolder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MECanvasHolder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_747_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MECanvasHolder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MusEcal_dict_src_747_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MECanvasHolder* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MECanvasHolder(*(MECanvasHolder*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MECanvasHolder));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MECanvasHolder G__TMECanvasHolder;
static int G__MusEcal_dict_src_747_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MECanvasHolder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MECanvasHolder*) (soff+(sizeof(MECanvasHolder)*i)))->~G__TMECanvasHolder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MECanvasHolder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MECanvasHolder*) (soff))->~G__TMECanvasHolder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MusEcal_dict_src_747_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MECanvasHolder* dest = (MECanvasHolder*) G__getstructoffset();
   *dest = *(MECanvasHolder*) libp->para[0].ref;
   const MECanvasHolder& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MEEBDisplay */
static int G__MusEcal_dict_src_748_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         MEEBGeom::EtaPhiPoint* pobj;
         MEEBGeom::EtaPhiPoint xobj = MEEBDisplay::getNode((int) G__int(libp->para[0]), (MEEBGeom::EBTTLocalCoord) G__int(libp->para[1])
, (MEEBGeom::EBTTLocalCoord) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
         pobj = new MEEBGeom::EtaPhiPoint(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEEBDisplay::drawEB();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      MEEBDisplay::drawSM((int) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      MEEBDisplay::drawSM((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      MEEBDisplay::drawTT((int) G__int(libp->para[0]), (MEEBGeom::EBTTLocalCoord) G__int(libp->para[1])
, (MEEBGeom::EBTTLocalCoord) G__int(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      MEEBDisplay::drawTT((int) G__int(libp->para[0]), (MEEBGeom::EBTTLocalCoord) G__int(libp->para[1])
, (MEEBGeom::EBTTLocalCoord) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      MEEBDisplay::drawXtal((MEEBGeom::EBGlobalCoord) G__int(libp->para[0]), (MEEBGeom::EBGlobalCoord) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      MEEBDisplay::drawXtal((MEEBGeom::EBGlobalCoord) G__int(libp->para[0]), (MEEBGeom::EBGlobalCoord) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      MEEBDisplay::drawXtal((MEEBGeom::EBGlobalCoord) G__int(libp->para[0]), (MEEBGeom::EBGlobalCoord) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEEBDisplay::drawEBGlobal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEEBDisplay::drawEBLocal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) MEEBDisplay::getXtalPolyLine((MEEBGeom::EBGlobalCoord) G__int(libp->para[0]), (MEEBGeom::EBGlobalCoord) G__int(libp->para[1])
, (float) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MEEBDisplay::getXtalPolyLine((MEEBGeom::EBGlobalCoord) G__int(libp->para[0]), (MEEBGeom::EBGlobalCoord) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) MEEBDisplay::getTTPolyLine((int) G__int(libp->para[0]), (MEEBGeom::EBTTLocalCoord) G__int(libp->para[1])
, (MEEBGeom::EBTTLocalCoord) G__int(libp->para[2]), (float) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MEEBDisplay::getTTPolyLine((int) G__int(libp->para[0]), (MEEBGeom::EBTTLocalCoord) G__int(libp->para[1])
, (MEEBGeom::EBTTLocalCoord) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) MEEBDisplay::getSMPolyLine((int) G__int(libp->para[0]), (float) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MEEBDisplay::getSMPolyLine((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEEBDisplay::drawRz();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEEBDisplay::refresh();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MEEBDisplay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEEBDisplay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MEEBDisplay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEEBDisplay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MEEBDisplay*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEEBDisplay*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEEBDisplay*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEEBDisplay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEEBDisplay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEEBDisplay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEEBDisplay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_748_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEEBDisplay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__MusEcal_dict_src_748_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MEEBDisplay *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MEEBDisplay[n];
     } else {
       p = new((void*) gvp) MEEBDisplay[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MEEBDisplay;
     } else {
       p = new((void*) gvp) MEEBDisplay;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEBDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MusEcal_dict_src_748_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MEEBDisplay* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MEEBDisplay(*(MEEBDisplay*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEBDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MEEBDisplay G__TMEEBDisplay;
static int G__MusEcal_dict_src_748_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MEEBDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MEEBDisplay*) (soff+(sizeof(MEEBDisplay)*i)))->~G__TMEEBDisplay();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MEEBDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MEEBDisplay*) (soff))->~G__TMEEBDisplay();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MusEcal_dict_src_748_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MEEBDisplay* dest = (MEEBDisplay*) G__getstructoffset();
   *dest = *(MEEBDisplay*) libp->para[0].ref;
   const MEEBDisplay& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MEEEDisplay */
static int G__MusEcal_dict_src_767_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         MEEEGeom::EtaPhiPoint* pobj;
         MEEEGeom::EtaPhiPoint xobj = MEEEDisplay::getNode((MEEEGeom::SuperCrysCoord) G__int(libp->para[0]), (MEEEGeom::SuperCrysCoord) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
         pobj = new MEEEGeom::EtaPhiPoint(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEEEDisplay::drawEEGlobal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEEEDisplay::drawEELocal((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEEEDisplay::drawEE();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      MEEEDisplay::drawSC((MEEEGeom::SuperCrysCoord) G__int(libp->para[0]), (MEEEGeom::SuperCrysCoord) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      MEEEDisplay::drawSC((MEEEGeom::SuperCrysCoord) G__int(libp->para[0]), (MEEEGeom::SuperCrysCoord) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      MEEEDisplay::drawXtal((MEEEGeom::CrysCoord) G__int(libp->para[0]), (MEEEGeom::CrysCoord) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      MEEEDisplay::drawXtal((MEEEGeom::CrysCoord) G__int(libp->para[0]), (MEEEGeom::CrysCoord) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      MEEEDisplay::drawXtal((MEEEGeom::CrysCoord) G__int(libp->para[0]), (MEEEGeom::CrysCoord) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) MEEEDisplay::getXtalPolyLine((MEEEGeom::CrysCoord) G__int(libp->para[0]), (MEEEGeom::CrysCoord) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MEEEDisplay::getXtalPolyLine((MEEEGeom::CrysCoord) G__int(libp->para[0]), (MEEEGeom::CrysCoord) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) MEEEDisplay::getSCPolyLine((MEEEGeom::SuperCrysCoord) G__int(libp->para[0]), (MEEEGeom::SuperCrysCoord) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) MEEEDisplay::getSCPolyLine((MEEEGeom::SuperCrysCoord) G__int(libp->para[0]), (MEEEGeom::SuperCrysCoord) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEEEDisplay::drawRz();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEEEDisplay::refresh();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MEEEDisplay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEEEDisplay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MEEEDisplay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEEEDisplay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MEEEDisplay*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEEEDisplay*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEEEDisplay*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEEEDisplay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEEEDisplay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEEEDisplay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEEEDisplay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_767_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEEEDisplay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__MusEcal_dict_src_767_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MEEEDisplay *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MEEEDisplay[n];
     } else {
       p = new((void*) gvp) MEEEDisplay[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MEEEDisplay;
     } else {
       p = new((void*) gvp) MEEEDisplay;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEEDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MusEcal_dict_src_767_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MEEEDisplay* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MEEEDisplay(*(MEEEDisplay*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEEDisplay));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MEEEDisplay G__TMEEEDisplay;
static int G__MusEcal_dict_src_767_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MEEEDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MEEEDisplay*) (soff+(sizeof(MEEEDisplay)*i)))->~G__TMEEEDisplay();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MEEEDisplay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MEEEDisplay*) (soff))->~G__TMEEEDisplay();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MusEcal_dict_src_767_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MEEEDisplay* dest = (MEEEDisplay*) G__getstructoffset();
   *dest = *(MEEEDisplay*) libp->para[0].ref;
   const MEEEDisplay& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MEClickableCanvas */
static int G__MusEcal_dict_src_1021_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MEClickableCanvas* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MEClickableCanvas(
(const char*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (MECanvasHolder*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) MEClickableCanvas(
(const char*) G__int(libp->para[0]), (const TGWindow*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (MECanvasHolder*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEClickableCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1021_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MEClickableCanvas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1021_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEClickableCanvas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1021_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MEClickableCanvas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1021_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEClickableCanvas::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1021_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEClickableCanvas*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1021_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEClickableCanvas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1021_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEClickableCanvas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1021_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEClickableCanvas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1021_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEClickableCanvas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MEClickableCanvas G__TMEClickableCanvas;
static int G__MusEcal_dict_src_1021_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MEClickableCanvas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MEClickableCanvas*) (soff+(sizeof(MEClickableCanvas)*i)))->~G__TMEClickableCanvas();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MEClickableCanvas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MEClickableCanvas*) (soff))->~G__TMEClickableCanvas();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MEPlotWindow */
static int G__MusEcal_dict_src_1022_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MEPlotWindow* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MEPlotWindow(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])
, (const char*) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) MEPlotWindow(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])
, (const char*) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MEPlotWindow(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) MEPlotWindow(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MEPlotWindow(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) MEPlotWindow(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MEPlotWindow(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) MEPlotWindow(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (const char*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MEPlotWindow(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) MEPlotWindow(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEPlotWindow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1022_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEPlotWindow*) G__getstructoffset())->setPrintName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1022_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((MEPlotWindow*) G__getstructoffset())->name();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1022_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEPlotWindow*) G__getstructoffset())->write();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1022_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEPlotWindow*) G__getstructoffset())->CloseWindow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1022_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEPlotWindow*) G__getstructoffset())->DoClose();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1022_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MEPlotWindow::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1022_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEPlotWindow::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1022_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MEPlotWindow::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1022_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEPlotWindow::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1022_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEPlotWindow*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1022_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEPlotWindow::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1022_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEPlotWindow::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1022_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEPlotWindow::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1022_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEPlotWindow::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MusEcal_dict_src_1022_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MEPlotWindow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MEPlotWindow(*(MEPlotWindow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEPlotWindow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MEPlotWindow G__TMEPlotWindow;
static int G__MusEcal_dict_src_1022_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MEPlotWindow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MEPlotWindow*) (soff+(sizeof(MEPlotWindow)*i)))->~G__TMEPlotWindow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MEPlotWindow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MEPlotWindow*) (soff))->~G__TMEPlotWindow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MusEcal_dict_src_1022_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MEPlotWindow* dest = (MEPlotWindow*) G__getstructoffset();
   *dest = *(MEPlotWindow*) libp->para[0].ref;
   const MEPlotWindow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MERunPanel */
static int G__MusEcal_dict_src_1023_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MERunPanel* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MERunPanel(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) MERunPanel(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunPanel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1023_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunPanel*) G__getstructoffset())->CloseWindow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1023_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunPanel*) G__getstructoffset())->DoClose();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1023_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunPanel*) G__getstructoffset())->SetCurrentRun((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1023_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MERunPanel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1023_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MERunPanel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1023_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MERunPanel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1023_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MERunPanel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1023_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MERunPanel*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1023_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunPanel*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1023_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunPanel*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1023_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MERunPanel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1023_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MERunPanel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1023_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MERunPanel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1023_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MERunPanel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1023_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MERunPanel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MusEcal_dict_src_1023_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MERunPanel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MERunPanel(*(MERunPanel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunPanel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MERunPanel G__TMERunPanel;
static int G__MusEcal_dict_src_1023_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MERunPanel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MERunPanel*) (soff+(sizeof(MERunPanel)*i)))->~G__TMERunPanel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MERunPanel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MERunPanel*) (soff))->~G__TMERunPanel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MusEcal_dict_src_1023_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MERunPanel* dest = (MERunPanel*) G__getstructoffset();
   *dest = *(MERunPanel*) libp->para[0].ref;
   const MERunPanel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MEChanPanel */
static int G__MusEcal_dict_src_1024_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MEChanPanel* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MEChanPanel(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) MEChanPanel(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEChanPanel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEChanPanel*) G__getstructoffset())->CloseWindow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEChanPanel*) G__getstructoffset())->DoClose();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEChanPanel*) G__getstructoffset())->SelectChannel((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEChanPanel*) G__getstructoffset())->SelectID();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEChanPanel*) G__getstructoffset())->SelectXY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEChanPanel*) G__getstructoffset())->SelectXYZ();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MEChanPanel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEChanPanel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MEChanPanel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEChanPanel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MEChanPanel*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEChanPanel*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEChanPanel*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEChanPanel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEChanPanel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEChanPanel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEChanPanel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1024_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEChanPanel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MusEcal_dict_src_1024_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MEChanPanel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MEChanPanel(*(MEChanPanel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEChanPanel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MEChanPanel G__TMEChanPanel;
static int G__MusEcal_dict_src_1024_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MEChanPanel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MEChanPanel*) (soff+(sizeof(MEChanPanel)*i)))->~G__TMEChanPanel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MEChanPanel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MEChanPanel*) (soff))->~G__TMEChanPanel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MusEcal_dict_src_1024_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MEChanPanel* dest = (MEChanPanel*) G__getstructoffset();
   *dest = *(MEChanPanel*) libp->para[0].ref;
   const MEChanPanel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MELeafPanel */
static int G__MusEcal_dict_src_1025_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MELeafPanel* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MELeafPanel(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) MELeafPanel(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MELeafPanel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MELeafPanel*) G__getstructoffset())->CloseWindow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MELeafPanel*) G__getstructoffset())->DoClose();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MELeafPanel*) G__getstructoffset())->DoPlot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MELeafPanel*) G__getstructoffset())->DoDiffPlot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MELeafPanel*) G__getstructoffset())->DoOneLevelUp();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MELeafPanel*) G__getstructoffset())->SetVar((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MELeafPanel*) G__getstructoffset())->SetZoom((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MELeafPanel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MELeafPanel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MELeafPanel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MELeafPanel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MELeafPanel*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MELeafPanel*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MELeafPanel*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MELeafPanel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MELeafPanel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MELeafPanel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MELeafPanel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1025_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MELeafPanel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MusEcal_dict_src_1025_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MELeafPanel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MELeafPanel(*(MELeafPanel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MELeafPanel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MELeafPanel G__TMELeafPanel;
static int G__MusEcal_dict_src_1025_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MELeafPanel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MELeafPanel*) (soff+(sizeof(MELeafPanel)*i)))->~G__TMELeafPanel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MELeafPanel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MELeafPanel*) (soff))->~G__TMELeafPanel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MusEcal_dict_src_1025_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MELeafPanel* dest = (MELeafPanel*) G__getstructoffset();
   *dest = *(MELeafPanel*) libp->para[0].ref;
   const MELeafPanel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MEMultiVarPanel */
static int G__MusEcal_dict_src_1026_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MEMultiVarPanel* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MEMultiVarPanel(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) MEMultiVarPanel(
(const TGWindow*) G__int(libp->para[0]), (MusEcalGUI*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEMultiVarPanel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1026_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEMultiVarPanel*) G__getstructoffset())->CloseWindow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1026_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEMultiVarPanel*) G__getstructoffset())->DoClose();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1026_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEMultiVarPanel*) G__getstructoffset())->DoGo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1026_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MEMultiVarPanel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1026_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEMultiVarPanel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1026_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MEMultiVarPanel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1026_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MEMultiVarPanel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1026_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MEMultiVarPanel*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1026_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEMultiVarPanel*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1026_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEMultiVarPanel*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1026_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MEMultiVarPanel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1026_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEMultiVarPanel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1026_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEMultiVarPanel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1026_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MEMultiVarPanel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1026_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MEMultiVarPanel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MusEcal_dict_src_1026_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MEMultiVarPanel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MEMultiVarPanel(*(MEMultiVarPanel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEMultiVarPanel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MEMultiVarPanel G__TMEMultiVarPanel;
static int G__MusEcal_dict_src_1026_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MEMultiVarPanel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MEMultiVarPanel*) (soff+(sizeof(MEMultiVarPanel)*i)))->~G__TMEMultiVarPanel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MEMultiVarPanel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MEMultiVarPanel*) (soff))->~G__TMEMultiVarPanel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MusEcal_dict_src_1026_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MEMultiVarPanel* dest = (MEMultiVarPanel*) G__getstructoffset();
   *dest = *(MEMultiVarPanel*) libp->para[0].ref;
   const MEMultiVarPanel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MusEcalGUI */
static int G__MusEcal_dict_src_1027_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MusEcalGUI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MusEcalGUI[n];
     } else {
       p = new((void*) gvp) MusEcalGUI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MusEcalGUI;
     } else {
       p = new((void*) gvp) MusEcalGUI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1027_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MusEcalGUI* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MusEcalGUI(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) MusEcalGUI(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MusEcalGUI(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MusEcalGUI(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MusEcalGUI(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MusEcalGUI(
(const TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1027_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcalGUI*) G__getstructoffset())->HandleFileMenu((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1027_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcalGUI*) G__getstructoffset())->HandleHistMenu((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1027_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcalGUI*) G__getstructoffset())->HandleHistoryMenu((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1027_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcalGUI*) G__getstructoffset())->HandleChannelMenu((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1027_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MusEcalGUI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1027_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MusEcalGUI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1027_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MusEcalGUI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1027_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MusEcalGUI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1027_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MusEcalGUI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1027_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MusEcalGUI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1027_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MusEcalGUI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1027_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MusEcalGUI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MusEcal_dict_src_1027_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MusEcalGUI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MusEcalGUI G__TMusEcalGUI;
static int G__MusEcal_dict_src_1027_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MusEcalGUI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MusEcalGUI*) (soff+(sizeof(MusEcalGUI)*i)))->~G__TMusEcalGUI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MusEcalGUI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MusEcalGUI*) (soff))->~G__TMusEcalGUI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MERun */

/* MERunManager */

/* MusEcal */

/* MEVarVector */

/* METimeInterval */

/* MECanvasHolder */

/* MEEBDisplay */

/* MEEEDisplay */

/* MEClickableCanvas */

/* MEPlotWindow */

/* MERunPanel */

/* MEChanPanel */

/* MELeafPanel */

/* MEMultiVarPanel */

/* MusEcalGUI */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMusEcal_dict_src {
 public:
  G__Sizep2memfuncMusEcal_dict_src(): p(&G__Sizep2memfuncMusEcal_dict_src::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMusEcal_dict_src::*p)();
};

size_t G__get_sizep2memfuncMusEcal_dict_src()
{
  G__Sizep2memfuncMusEcal_dict_src a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMusEcal_dict_src() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEClickableCanvas))) {
     MEClickableCanvas *G__Lderived;
     G__Lderived=(MEClickableCanvas*)0x1000;
     {
       TRootEmbeddedCanvas *G__Lpbase=(TRootEmbeddedCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEClickableCanvas),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TRootEmbeddedCanvas),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCanvas *G__Lpbase=(TGCanvas*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEClickableCanvas),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGCanvas),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEClickableCanvas),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEClickableCanvas),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEClickableCanvas),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEClickableCanvas),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEClickableCanvas),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEPlotWindow))) {
     MEPlotWindow *G__Lderived;
     G__Lderived=(MEPlotWindow*)0x1000;
     {
       MECanvasHolder *G__Lpbase=(MECanvasHolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEPlotWindow),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MECanvasHolder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI))) {
     MusEcalGUI *G__Lderived;
     G__Lderived=(MusEcalGUI*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       MECanvasHolder *G__Lpbase=(MECanvasHolder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MECanvasHolder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       MusEcal *G__Lpbase=(MusEcal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI),G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMusEcal_dict_src() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<ME::DCCid,ME::PNid>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_pairlEintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<ME::DCCid,ME::DCCid>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_pairlEintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ME::LMMid>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ME::DCCid>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MEChannel*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEMEChannelmUcOallocatorlEMEChannelmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEMEChannelmUcOallocatorlEMEChannelmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEMEChannelmUcOallocatorlEMEChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEMEChannelmUcOallocatorlEMEChannelmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEMEChannelmUcOallocatorlEMEChannelmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<std::pair<float,float> >",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_listlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<pair<float,float>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_listlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TH2*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOTH2mUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTH2mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TH2*,less<TString>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOTH2mUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTH2mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,unsigned int>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOunsignedsPintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,unsigned int,less<TString>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOunsignedsPintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,float>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,float,less<TString>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ME::Time,MERun*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned long,MERun*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned long,MERun*,less<unsigned long>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RunMap",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ME::Time,float>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOfloatcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned long,float>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOfloatcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned long,float,less<unsigned long>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOfloatcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("FloatTimeMap",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOfloatcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOfloatgRsPgRsPgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ME::Time,bool>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOboolcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned long,bool>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOboolcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned long,bool,less<unsigned long>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOboolcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("BoolTimeMap",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOboolcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOboolgRsPgRsPgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Var",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_pairlEfloatcOboolgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ME::Time,Var>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOpairlEfloatcOboolgRcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOpairlEfloatcOboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned long,pair<float,bool>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOpairlEfloatcOboolgRcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOpairlEfloatcOboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned long,pair<float,bool>,less<unsigned long>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOpairlEfloatcOboolgRcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOpairlEfloatcOboolgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("VarTimeMap",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOpairlEfloatcOboolgRcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOpairlEfloatcOboolgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Var>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<float,bool>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("VarVec",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ME::Time,VarVec*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned long,vector<pair<float,bool>,allocator<pair<float,bool> > >*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned long,vector<pair<float,bool>,allocator<pair<float,bool> > >*,less<unsigned long>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("VarVecTimeMap",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUgRsPgRsPgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RunIterator",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RunConstIterator",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,MERunManager*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOMERunManagermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMERunManagermUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,MERunManager*,less<TString>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOMERunManagermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMERunManagermUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TH1*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOTH1mUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TH1*,less<TString>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOTH1mUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int,less<TString>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<MEChannel*,MEVarVector*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEMEChannelmUcOMEVarVectormUcOlesslEMEChannelmUgRcOallocatorlEpairlEMEChannelmUsPconstcOMEVarVectormUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<MEChannel*,MEVarVector*,less<MEChannel*>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEMEChannelmUcOMEVarVectormUcOlesslEMEChannelmUgRcOallocatorlEpairlEMEChannelmUsPconstcOMEVarVectormUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<ME::Time>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_listlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<unsigned long>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_listlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ME::Time>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,pair<float,float> >",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEintcOpairlEfloatcOfloatgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEfloatcOfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,pair<float,float>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEintcOpairlEfloatcOfloatgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEfloatcOfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,pair<float,float>,less<int>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEintcOpairlEfloatcOfloatgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEfloatcOfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TPolyLine*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEintcOTPolyLinemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTPolyLinemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TPolyLine*,less<int>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEintcOTPolyLinemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTPolyLinemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TObject*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_listlETObjectmUcOallocatorlETObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,MEEEGeom::EtaPhiPoint>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEintcOpairlEfloatcOfloatgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEfloatcOfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,MEPlotWindow*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOMEPlotWindowmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMEPlotWindowmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,MEPlotWindow*,less<TString>>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOMEPlotWindowmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMEPlotWindowmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGPopupMenu*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETGPopupMenumUcOallocatorlETGPopupMenumUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETGPopupMenumUcOallocatorlETGPopupMenumUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETGPopupMenumUcOallocatorlETGPopupMenumUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETGPopupMenumUcOallocatorlETGPopupMenumUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETGPopupMenumUcOallocatorlETGPopupMenumUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGComboBox*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETGComboBoxmUcOallocatorlETGComboBoxmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETGComboBoxmUcOallocatorlETGComboBoxmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETGComboBoxmUcOallocatorlETGComboBoxmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETGComboBoxmUcOallocatorlETGComboBoxmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETGComboBoxmUcOallocatorlETGComboBoxmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGGroupFrame*>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETGGroupFramemUcOallocatorlETGGroupFramemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETGGroupFramemUcOallocatorlETGGroupFramemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETGGroupFramemUcOallocatorlETGGroupFramemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETGGroupFramemUcOallocatorlETGGroupFramemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETGGroupFramemUcOallocatorlETGGroupFramemUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MERun */
static void G__setup_memvarMERun(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERun));
   { MERun *p; p=(MERun*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEcLcLHeader),G__defined_typename("Header"),-1,4,"_header=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEcLcLSettings),G__defined_typename("Settings"),-1,4,"_settings=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_color=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString),-1,-1,4,"_fname=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TFile),-1,-1,4,"_file=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOTH2mUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTH2mUgRsPgRsPgR),G__defined_typename("map<TString,TH2*>"),-1,4,"_h=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TTree),-1,-1,4,"pn_t=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOunsignedsPintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOunsignedsPintgRsPgRsPgR),G__defined_typename("map<TString,unsigned int>"),-1,4,"pn_i=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR),G__defined_typename("map<TString,float>"),-1,4,"pn_d=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TTree),-1,-1,4,"mtq_t=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOunsignedsPintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOunsignedsPintgRsPgRsPgR),G__defined_typename("map<TString,unsigned int>"),-1,4,"mtq_i=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR),G__defined_typename("map<TString,float>"),-1,4,"mtq_d=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MERunManager */
static void G__setup_memvarMERunManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunManager));
   { MERunManager *p; p=(MERunManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_lmr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_reg=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_sm=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_dcc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_side=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_color=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString),-1,-1,4,"_lmdataPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString),-1,-1,4,"_primPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgR),G__defined_typename("RunMap"),-1,4,"_runs=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("Time"),-1,4,"_first=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("Time"),-1,4,"_last=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("Time"),-1,4,"_current=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("Time"),-1,4,"_normFirst=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("Time"),-1,4,"_normLast=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOboolcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOboolgRsPgRsPgR),G__defined_typename("BoolTimeMap"),-1,4,"_badRuns=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEMEChannelmUcOMEVarVectormUcOlesslEMEChannelmUgRcOallocatorlEpairlEMEChannelmUsPconstcOMEVarVectormUgRsPgRsPgR),G__defined_typename("map<MEChannel*,MEVarVector*>"),-1,4,"_apdMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEMEChannelmUcOMEVarVectormUcOlesslEMEChannelmUgRcOallocatorlEpairlEMEChannelmUsPconstcOMEVarVectormUgRsPgRsPgR),G__defined_typename("map<MEChannel*,MEVarVector*>"),-1,4,"_pnMap[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEMEChannelmUcOMEVarVectormUcOlesslEMEChannelmUgRcOallocatorlEpairlEMEChannelmUsPconstcOMEVarVectormUgRsPgRsPgR),G__defined_typename("map<MEChannel*,MEVarVector*>"),-1,4,"_mtqMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEChannel),-1,-1,4,"_tree=",0,"the tree of channels");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MusEcal */
static void G__setup_memvarMusEcal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal));
   { MusEcal *p; p=(MusEcal*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLHistCateg),-1,-2,1,"iH_APD=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLHistCateg),-1,-2,1,"iH_PN=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLHistCateg),-1,-2,1,"iH_MTQ=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLHistCateg),-1,-2,1,"iSizeHC=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLHistType),-1,-2,1,"iHIST=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLHistType),-1,-2,1,"iVS_CHANNEL=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLHistType),-1,-2,1,"iMAP=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLHistType),-1,-2,1,"iSizeHT=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iNLS=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iCorNLS=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iAPDoPNA=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iAPDoPNB=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iAPDoPN=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iAPD=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iAPDTime=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iPNA=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iPNB=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iPNBoPNA=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iAlphaBeta=10",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iAlphaBeta_used=11",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iShapeCor=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iMTQTrise=13",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iMTQAmpl=14",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iMTQFwhm=15",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iMTQFw20=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iMTQFw80=17",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iMTQTime=18",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iSizeLV=19",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iTPAPD_0=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iTPAPD_1=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iTPAPD_2=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iTPPNA_0=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iTPPNA_1=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iTPPNB_0=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iTPPNB_1=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iSizeTPV=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iOneHundredPercent=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iFiftyPercent=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iThirtyPercent=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iTenPercent=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iFivePercent=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iThreePercent=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iPercent=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iFivePerMil=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iThreePerMil=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iPerMil=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalcLcLdA),-1,-2,1,"iZero=10",0,(char*)NULL);
   G__memvar_setup((void*)(&MusEcal::historyVarTitle),117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString),-1,-2,1,"historyVarTitle[19]=",0,(char*)NULL);
   G__memvar_setup((void*)(&MusEcal::historyVarName),117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString),-1,-2,1,"historyVarName[19]=",0,(char*)NULL);
   G__memvar_setup((void*)(&MusEcal::iGVar),105,0,0,-1,-1,-2,1,"iGVar[19]=",0,(char*)NULL);
   G__memvar_setup((void*)(&MusEcal::historyVarZoom),105,0,0,-1,-1,-2,1,"historyVarZoom[6][19]=",0,(char*)NULL);
   G__memvar_setup((void*)(&MusEcal::historyVarColor),105,0,0,-1,-1,-2,1,"historyVarColor[19]=",0,(char*)NULL);
   G__memvar_setup((void*)(&MusEcal::historyTPVarName),117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString),-1,-2,1,"historyTPVarName[7]=",0,(char*)NULL);
   G__memvar_setup((void*)(&MusEcal::historyTPVarTitle),117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString),-1,-2,1,"historyTPVarTitle[7]=",0,(char*)NULL);
   G__memvar_setup((void*)(&MusEcal::iGTPVar),105,0,0,-1,-1,-2,1,"iGTPVar[7]=",0,(char*)NULL);
   G__memvar_setup((void*)(&MusEcal::historyTPVarColor),105,0,0,-1,-1,-2,1,"historyTPVarColor[7]=",0,(char*)NULL);
   G__memvar_setup((void*)(&MusEcal::historyTPVarZoom),105,0,0,-1,-1,-2,1,"historyTPVarZoom[7]=",0,(char*)NULL);
   G__memvar_setup((void*)(&MusEcal::zoomName),117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString),-1,-2,1,"zoomName[10]=",0,(char*)NULL);
   G__memvar_setup((void*)(&MusEcal::zoomRange),100,0,0,-1,-1,-2,1,"zoomRange[10]=",0,(char*)NULL);
   G__memvar_setup((void*)(&MusEcal::firstRun),105,0,0,-1,-1,-2,1,"firstRun=",0,(char*)NULL);
   G__memvar_setup((void*)(&MusEcal::lastRun),105,0,0,-1,-1,-2,1,"lastRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)(&MusEcal::verbose),103,0,0,-1,-1,-2,1,"verbose=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOMERunManagermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMERunManagermUgRsPgRsPgR),G__defined_typename("map<TString,MERunManager*>"),-1,2,"_runMgr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"_lmr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"_color=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEChannel),-1,-1,2,"_leaf=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"_ig=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("Time"),-1,2,"_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"_var=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"_zoom=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_debug=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_isGUI=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_histoBooked=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_ebHistoBooked=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_eeHistoBooked=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TFile),-1,-1,2,"_febgeom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TH2),-1,-1,2,"_eb_h=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TH2),-1,-1,2,"_eb_loc_h=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOTH1mUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTH1mUgRsPgRsPgR),G__defined_typename("map<TString,TH1*>"),-1,2,"_eb_m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOTH1mUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTH1mUgRsPgRsPgR),G__defined_typename("map<TString,TH1*>"),-1,2,"_eb_loc_m=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TFile),-1,-1,2,"_feegeom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TH2),-1,-1,2,"_ee_h=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TH2),-1,-1,2,"_ee_loc_h[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOTH1mUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTH1mUgRsPgRsPgR),G__defined_typename("map<TString,TH1*>"),-1,2,"_ee_m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOTH1mUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTH1mUgRsPgRsPgR),G__defined_typename("map<TString,TH1*>"),-1,2,"_ee_loc_m=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),G__defined_typename("map<TString,int>"),-1,2,"_eb_nbin=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR),G__defined_typename("map<TString,float>"),-1,2,"_eb_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR),G__defined_typename("map<TString,float>"),-1,2,"_eb_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),G__defined_typename("map<TString,int>"),-1,2,"_ee_nbin=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR),G__defined_typename("map<TString,float>"),-1,2,"_ee_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR),G__defined_typename("map<TString,float>"),-1,2,"_ee_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TTree),-1,-1,2,"_seq_t=",0,"sequence rootuple");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_seq_run=",0,"run number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_seq_lb=",0,"lumi block of first LMR");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_seq_tbeg=",0,"time at beginning of sequence");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_seq_tlmr[92]=",0,"array of times, -1 LMR not present");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TBranch),-1,-1,2,"b_seq_run=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TBranch),-1,-1,2,"b_seq_lb=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TBranch),-1,-1,2,"b_seq_tbeg=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TBranch),-1,-1,2,"b_seq_tlmr[92]=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MEVarVector */
static void G__setup_memvarMEVarVector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEVarVector));
   { MEVarVector *p; p=(MEVarVector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_size=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUgRsPgRsPgR),G__defined_typename("VarVecTimeMap"),-1,4,"_map=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* METimeInterval */
static void G__setup_memvarMETimeInterval(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval));
   { METimeInterval *p; p=(METimeInterval*)0x1000; if (p) { }
   G__memvar_setup((void*)(&METimeInterval::instances),105,0,0,-1,-1,-2,1,"instances=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("Time"),-1,4,"_firstTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("Time"),-1,4,"_lastTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval),-1,-1,4,"_previous=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval),-1,-1,4,"_next=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval),-1,-1,4,"_above=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval),-1,-1,4,"_below=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"_level=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"_good=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MECanvasHolder */
static void G__setup_memvarMECanvasHolder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MECanvasHolder));
   { MECanvasHolder *p; p=(MECanvasHolder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCanvas)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TCanvas),-1,-1,1,"fCanvas=",0,"Canvas of fECanvas");
   G__memvar_setup((void*)((long)(&p->fPad)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TPad),-1,-1,1,"fPad=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTopXGen)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTopXGen=",0,"Top x  of general canvas fCanvas");
   G__memvar_setup((void*)((long)(&p->fTopYGen)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTopYGen=",0,"Top y  of general canvas fCanvas");
   G__memvar_setup((void*)((long)(&p->fWidthGen)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fWidthGen=",0,"Width  of general canvas fCanvas");
   G__memvar_setup((void*)((long)(&p->fHeigthGen)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fHeigthGen=",0,"Heigth of general canvas fCanvas");
   G__memvar_setup((void*)((long)(&p->fDate)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString),-1,-1,1,"fDate=",0,"Date when program runs");
   G__memvar_setup((void*)((long)(&p->fTime)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString),-1,-1,1,"fTime=",0,"Time when program runs");
   G__memvar_setup((void*)((long)(&p->fWelcomePave)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TPaveText),-1,-1,1,"fWelcomePave=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fWelcomeState)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fWelcomeState=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fWelcomeTitle)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TText),-1,-1,1,"fWelcomeTitle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fWelcomeL0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TText),-1,-1,1,"fWelcomeL0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTexTL)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TLatex),-1,-1,1,"fTexTL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTexTR)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TLatex),-1,-1,1,"fTexTR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTexBL)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TLatex),-1,-1,1,"fTexBL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTexBR)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TLatex),-1,-1,1,"fTexBR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_px)-(long)(p)),105,0,0,-1,-1,-1,1,"_px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_py)-(long)(p)),105,0,0,-1,-1,-1,1,"_py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_x)-(long)(p)),102,0,0,-1,-1,-1,1,"_x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_y)-(long)(p)),102,0,0,-1,-1,-1,1,"_y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_h)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TH1),-1,-1,1,"_h=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_scale=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_refw=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MEEBDisplay */
static void G__setup_memvarMEEBDisplay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEBDisplay));
   { MEEBDisplay *p; p=(MEEBDisplay*)0x1000; if (p) { }
   G__memvar_setup((void*)(&MEEBDisplay::bkgColor),105,0,0,-1,-1,-2,1,"bkgColor=",0,(char*)NULL);
   G__memvar_setup((void*)(&MEEBDisplay::lineColor),105,0,0,-1,-1,-2,1,"lineColor=",0,(char*)NULL);
   G__memvar_setup((void*)(&MEEBDisplay::lineWidth),105,0,0,-1,-1,-2,1,"lineWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEintcOpairlEfloatcOfloatgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEfloatcOfloatgRsPgRsPgRsPgR),G__defined_typename("map<int,pair<float,float> >"),-2,4,"_phiLimits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEintcOpairlEfloatcOfloatgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEfloatcOfloatgRsPgRsPgRsPgR),G__defined_typename("map<int,pair<float,float> >"),-2,4,"_etaLimits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEintcOTPolyLinemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTPolyLinemUgRsPgRsPgR),G__defined_typename("map<int,TPolyLine*>"),-2,4,"_rzXtals=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_listlETObjectmUcOallocatorlETObjectmUgRsPgR),G__defined_typename("list<TObject*>"),-2,4,"_list=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MEEEDisplay */
static void G__setup_memvarMEEEDisplay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEEDisplay));
   { MEEEDisplay *p; p=(MEEEDisplay*)0x1000; if (p) { }
   G__memvar_setup((void*)(&MEEEDisplay::bkgColor),105,0,0,-1,-1,-2,1,"bkgColor=",0,(char*)NULL);
   G__memvar_setup((void*)(&MEEEDisplay::lineColor),105,0,0,-1,-1,-2,1,"lineColor=",0,(char*)NULL);
   G__memvar_setup((void*)(&MEEEDisplay::lineWidth),105,0,0,-1,-1,-2,1,"lineWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEintcOpairlEfloatcOfloatgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEfloatcOfloatgRsPgRsPgRsPgR),G__defined_typename("map<int,MEEEGeom::EtaPhiPoint>"),-2,4,"_pointMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEintcOTPolyLinemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTPolyLinemUgRsPgRsPgR),G__defined_typename("map<int,TPolyLine*>"),-2,4,"_rzXtals=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_listlETObjectmUcOallocatorlETObjectmUgRsPgR),G__defined_typename("list<TObject*>"),-2,4,"_list=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MEClickableCanvas */
static void G__setup_memvarMEClickableCanvas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEClickableCanvas));
   { MEClickableCanvas *p; p=(MEClickableCanvas*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MECanvasHolder),-1,-1,4,"_gui=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MEPlotWindow */
static void G__setup_memvarMEPlotWindow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEPlotWindow));
   { MEPlotWindow *p; p=(MEPlotWindow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI),-1,-1,4,"_gui=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGTransientFrame),-1,-1,4,"fMain=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fClose=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGHorizontalFrame),-1,-1,4,"fHFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TRootEmbeddedCanvas),-1,-1,4,"fEcanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString),-1,-1,4,"_name=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString),-1,-1,4,"_printName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MERunPanel */
static void G__setup_memvarMERunPanel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunPanel));
   { MERunPanel *p; p=(MERunPanel*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGTransientFrame),-1,-1,4,"fMain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGVerticalFrame),-1,-1,4,"fVframe1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGGroupFrame),-1,-1,4,"f_Run_Group=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGListBox),-1,-1,4,"f_RunList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGGroupFrame),-1,-1,4,"f_Range_Group=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fClose=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI),-1,-1,4,"_gui=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MEChanPanel */
static void G__setup_memvarMEChanPanel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEChanPanel));
   { MEChanPanel *p; p=(MEChanPanel*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGTransientFrame),-1,-1,4,"fMain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGHorizontalFrame),-1,-1,4,"fHframe1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGGroupFrame),-1,-1,4,"f_Channel_Group=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGGroupFrame),-1,-1,4,"f_Channel_ID_Group=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGGroupFrame),-1,-1,4,"f_Channel_XY_Group=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGHorizontalFrame),-1,-1,4,"f_X_Group=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGHorizontalFrame),-1,-1,4,"f_Y_Group=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGNumberEntry),-1,-1,4,"f_X=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGNumberEntry),-1,-1,4,"f_Y=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGTextButton),-1,-1,4,"f_XY_Button=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLabel),-1,-1,4,"f_X_Label=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLabel),-1,-1,4,"f_Y_Label=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGHorizontalFrame),-1,-1,4,"f_ID_Group=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGNumberEntry),-1,-1,4,"f_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGTextButton),-1,-1,4,"f_ID_Button=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLabel),-1,-1,4,"f_ID_Label=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGListBox),-1,-1,4,"f_ChannelID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGGroupFrame),-1,-1,4,"f_Global_Group=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGGroupFrame),-1,-1,4,"f_XYZ_Group=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGHorizontalFrame),-1,-1,4,"f_XYZ_X_Group=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGHorizontalFrame),-1,-1,4,"f_XYZ_Y_Group=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGHorizontalFrame),-1,-1,4,"f_XYZ_Z_Group=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGNumberEntry),-1,-1,4,"f_XYZ_X=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGNumberEntry),-1,-1,4,"f_XYZ_Y=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGNumberEntry),-1,-1,4,"f_XYZ_Z=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLabel),-1,-1,4,"f_XYZ_X_Label=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLabel),-1,-1,4,"f_XYZ_Y_Label=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLabel),-1,-1,4,"f_XYZ_Z_Label=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGTextButton),-1,-1,4,"f_XYZ_Button=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fClose=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_channelID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_iX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_iY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI),-1,-1,4,"_gui=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MELeafPanel */
static void G__setup_memvarMELeafPanel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MELeafPanel));
   { MELeafPanel *p; p=(MELeafPanel*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGTransientFrame),-1,-1,4,"fMain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGVerticalFrame),-1,-1,4,"fVframe1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGHorizontalFrame),-1,-1,4,"fHframe1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGHorizontalFrame),-1,-1,4,"fHframe2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGListBox),-1,-1,4,"fVarBox=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGListBox),-1,-1,4,"fZoomBox=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGTextButton),-1,-1,4,"fPlotButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGTextButton),-1,-1,4,"fDiffPlotButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGTextButton),-1,-1,4,"fOneLevelUpButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint5=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI),-1,-1,4,"_gui=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_color=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_var=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_zoom=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MEMultiVarPanel */
static void G__setup_memvarMEMultiVarPanel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEMultiVarPanel));
   { MEMultiVarPanel *p; p=(MEMultiVarPanel*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGTransientFrame),-1,-1,4,"fMain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGHorizontalFrame),-1,-1,4,"fHframe1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGVerticalFrame),-1,-1,4,"fVframe1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGVerticalFrame),-1,-1,4,"fVframe2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fHint5=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETGComboBoxmUcOallocatorlETGComboBoxmUgRsPgR),G__defined_typename("vector<TGComboBox*>"),-1,4,"f_ComboBox=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETGGroupFramemUcOallocatorlETGGroupFramemUgRsPgR),G__defined_typename("vector<TGGroupFrame*>"),-1,4,"f_GroupFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGTextButton),-1,-1,4,"f_Go_Button=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fClose=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI),-1,-1,4,"_gui=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_color=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MusEcalGUI */
static void G__setup_memvarMusEcalGUI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI));
   { MusEcalGUI *p; p=(MusEcalGUI*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUIcLcLdA),-1,-2,1,"iHIST=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUIcLcLdA),-1,-2,1,"iVS_CHANNEL=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUIcLcLdA),-1,-2,1,"iMAP=2",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunPanel),-1,-1,4,"_fRunPanel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEChanPanel),-1,-1,4,"_fChanPanel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MELeafPanel),-1,-1,4,"_fLeafPanel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEMultiVarPanel),-1,-1,4,"_fMultiVarPanel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ihtype=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_icateg=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ihist=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString),-1,-1,4,"_psdir=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"_normalize=",0,"FIXME: was in MusEcal");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUIcLcLdA),-1,-2,1,"iHistoryVsTime=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUIcLcLdA),-1,-2,1,"iHistoryProjection=1",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_historyType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplETStringcOMEPlotWindowmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMEPlotWindowmUgRsPgRsPgR),G__defined_typename("map<TString,MEPlotWindow*>"),-1,4,"_window=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fMenuBarLayout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fMenuBarItemLayout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fL1=",0,"Layout of fEcanvas in fHFrame1");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fL2=",0,"Layout of fHFrame1 in this");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fL5=",0,"Layout of fHFrame2 in this");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fLb=",0,"Layout of fVFrame in fHFrame1");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGLayoutHints),-1,-1,4,"fL8=",0,"Layout of fVFrame in fHFrame1");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGDockableFrame),-1,-1,4,"fMenuDock=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGMenuBar),-1,-1,4,"fMenuBar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_File_Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_Hist_Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_Laser_Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_APD_Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_PN_Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_MTQ_Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_APD_Hist_Menu[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_PN_Hist_Menu[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_MTQ_Hist_Menu[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_TP_Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_TPAPD_Gain_Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_TPPN_Gain_Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_TPAPD_Hist_Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_TPPN_Hist_Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_Channel_Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_vectorlETGPopupMenumUcOallocatorlETGPopupMenumUgRsPgR),G__defined_typename("vector<TGPopupMenu*>"),-1,4,"f_tree_menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_History_Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_History_L_Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_History_TPV_Menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGPopupMenu),-1,-1,4,"f_History_LV_Menu[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGHorizontalFrame),-1,-1,4,"fHFrame1=",0,"Horizontal frame up");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGHorizontalFrame),-1,-1,4,"fHFrame2=",0,"Horizontal frame down");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TGVerticalFrame),-1,-1,4,"fVFrame=",0,"Left frame in fHFrame1");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEClickableCanvas),-1,-1,4,"fEcanvas=",0,"RootEmbeddedCanvas in fHFrame1, at right - clickable !");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TPad),-1,-1,4,"_curPad=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMusEcal_dict_src() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMERun(void) {
   /* MERun */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERun));
   G__memfunc_setup("MERun",455,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERun), -1, 0, 3, 1, 4, 0, 
"u 'ME::Header' 'ME::Header' 0 - header u 'ME::Settings' 'ME::Settings' 0 - settings "
"u 'TString' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__MusEcal_dict_src_569_0_2, 103, -1, -1, 0, 1, 1, 1, 8, "u 'MERun' - 11 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("run",341,G__MusEcal_dict_src_569_0_3, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lb",206,G__MusEcal_dict_src_569_0_4, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time",431,G__MusEcal_dict_src_569_0_5, 107, -1, G__defined_typename("ME::Time"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("timestamp",980,G__MusEcal_dict_src_569_0_6, 109, -1, G__defined_typename("ME::TimeStamp"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rundir",660,G__MusEcal_dict_src_569_0_7, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("laserPrimFile",1327,G__MusEcal_dict_src_569_0_8, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TFile), -1, 0, 1, 1, 1, 0, "g - - 0 'false' refresh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeLaserPrimFile",1829,G__MusEcal_dict_src_569_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVal",611,G__MusEcal_dict_src_569_0_10, 102, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - table i - - 0 - var "
"i - - 0 '0' ix i - - 0 '0' iy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("header",617,G__MusEcal_dict_src_569_0_11, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEcLcLHeader), G__defined_typename("ME::Header"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("settings",881,G__MusEcal_dict_src_569_0_12, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEcLcLSettings), G__defined_typename("ME::Settings"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__MusEcal_dict_src_569_0_13, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("APDHist",621,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TH2), -1, 0, 1, 1, 4, 0, "i - - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PNTable",646,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TTree), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MTQTable",730,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TTree), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MusEcal_dict_src_569_0_17, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&MERun::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MusEcal_dict_src_569_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MERun::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MusEcal_dict_src_569_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&MERun::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MusEcal_dict_src_569_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MERun::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__MusEcal_dict_src_569_0_21, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MusEcal_dict_src_569_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MusEcal_dict_src_569_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MusEcal_dict_src_569_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MusEcal_dict_src_569_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MERun::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MusEcal_dict_src_569_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MERun::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MusEcal_dict_src_569_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MERun::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MusEcal_dict_src_569_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MERun::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("MERun", 455, G__MusEcal_dict_src_569_0_29, (int) ('i'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERun), -1, 0, 1, 1, 1, 0, "u 'MERun' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MERun", 581, G__MusEcal_dict_src_569_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MusEcal_dict_src_569_0_31, (int) ('u'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERun), -1, 1, 1, 1, 1, 0, "u 'MERun' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMERunManager(void) {
   /* MERunManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunManager));
   G__memfunc_setup("MERunManager",1154,G__MusEcal_dict_src_570_0_1, 105, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunManager), -1, 0, 3, 1, 1, 0, 
"h - - 0 - lmr h - - 0 - type "
"h - - 0 'ME::iSizeC' color", "when type=iLaser", (void*) NULL, 0);
   G__memfunc_setup("updateRunList",1364,G__MusEcal_dict_src_570_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("it",221,G__MusEcal_dict_src_570_0_3, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgRcLcLiterator), G__defined_typename("MusEcal::RunIterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("it",221,G__MusEcal_dict_src_570_0_4, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgRcLcLiterator), G__defined_typename("MusEcal::RunIterator"), 0, 1, 1, 1, 0, "k - 'ME::Time' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("from",436,G__MusEcal_dict_src_570_0_5, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgRcLcLiterator), G__defined_typename("MusEcal::RunIterator"), 0, 1, 1, 1, 0, "k - 'ME::Time' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("to",227,G__MusEcal_dict_src_570_0_6, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgRcLcLiterator), G__defined_typename("MusEcal::RunIterator"), 0, 1, 1, 1, 0, "k - 'ME::Time' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__MusEcal_dict_src_570_0_7, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgRcLcLiterator), G__defined_typename("MusEcal::RunIterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__MusEcal_dict_src_570_0_8, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgRcLcLiterator), G__defined_typename("MusEcal::RunIterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("first",552,G__MusEcal_dict_src_570_0_9, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgRcLcLiterator), G__defined_typename("MusEcal::RunIterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("last",436,G__MusEcal_dict_src_570_0_10, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgRcLcLiterator), G__defined_typename("MusEcal::RunIterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cur",330,G__MusEcal_dict_src_570_0_11, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgRcLcLiterator), G__defined_typename("MusEcal::RunIterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("beginKey",814,G__MusEcal_dict_src_570_0_12, 107, -1, G__defined_typename("ME::Time"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("endKey",608,G__MusEcal_dict_src_570_0_13, 107, -1, G__defined_typename("ME::Time"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("firstKey",849,G__MusEcal_dict_src_570_0_14, 107, -1, G__defined_typename("ME::Time"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lastKey",733,G__MusEcal_dict_src_570_0_15, 107, -1, G__defined_typename("ME::Time"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("normFirstKey",1261,G__MusEcal_dict_src_570_0_16, 107, -1, G__defined_typename("ME::Time"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("normLastKey",1145,G__MusEcal_dict_src_570_0_17, 107, -1, G__defined_typename("ME::Time"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("curKey",627,G__MusEcal_dict_src_570_0_18, 107, -1, G__defined_typename("ME::Time"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closestKey",1062,G__MusEcal_dict_src_570_0_19, 107, -1, G__defined_typename("ME::Time"), 0, 1, 1, 1, 0, "k - 'ME::Time' 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closestKeyInFuture",1880,G__MusEcal_dict_src_570_0_20, 107, -1, G__defined_typename("ME::Time"), 0, 1, 1, 1, 0, "k - 'ME::Time' 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__MusEcal_dict_src_570_0_21, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("beginRun",826,G__MusEcal_dict_src_570_0_22, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("endRun",620,G__MusEcal_dict_src_570_0_23, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("firstRun",861,G__MusEcal_dict_src_570_0_24, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lastRun",745,G__MusEcal_dict_src_570_0_25, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("curRun",639,G__MusEcal_dict_src_570_0_26, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("run",341,G__MusEcal_dict_src_570_0_27, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERun), -1, 0, 1, 1, 1, 0, "k - 'ME::Time' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCurrentRun",1380,G__MusEcal_dict_src_570_0_28, 103, -1, -1, 0, 1, 1, 1, 0, "k - 'ME::Time' 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNoCurrent",1260,G__MusEcal_dict_src_570_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPlotRange",1240,G__MusEcal_dict_src_570_0_30, 103, -1, -1, 0, 3, 1, 1, 0, 
"k - 'ME::Time' 0 - first k - 'ME::Time' 0 - last "
"g - - 0 'true' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNormRange",1237,G__MusEcal_dict_src_570_0_31, 103, -1, -1, 0, 3, 1, 1, 0, 
"k - 'ME::Time' 0 - first k - 'ME::Time' 0 - last "
"g - - 0 'true' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBadRun",904,G__MusEcal_dict_src_570_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBadRange",1088,G__MusEcal_dict_src_570_0_33, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'ME::Time' 0 - firstBad k - 'ME::Time' 0 - lastBad "
"g - - 0 'true' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("refreshBadRuns",1438,G__MusEcal_dict_src_570_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGood",613,G__MusEcal_dict_src_570_0_35, 103, -1, -1, 0, 1, 1, 1, 0, "k - 'ME::Time' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tree",432,G__MusEcal_dict_src_570_0_36, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEChannel), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__MusEcal_dict_src_570_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LMRegion",765,G__MusEcal_dict_src_570_0_38, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillMaps",824,G__MusEcal_dict_src_570_0_39, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFlags",825,G__MusEcal_dict_src_570_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLaserFlags",1328,G__MusEcal_dict_src_570_0_41, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTestPulseFlags",1762,G__MusEcal_dict_src_570_0_42, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apdVector",936,G__MusEcal_dict_src_570_0_43, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEVarVector), -1, 0, 1, 1, 1, 0, "U 'MEChannel' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pnVector",849,G__MusEcal_dict_src_570_0_44, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEVarVector), -1, 0, 2, 1, 1, 0, 
"U 'MEChannel' - 0 - - i - - 0 - ipn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mtqVector",965,G__MusEcal_dict_src_570_0_45, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEVarVector), -1, 0, 1, 1, 1, 0, "U 'MEChannel' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFlag",710,G__MusEcal_dict_src_570_0_46, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'MEChannel' - 0 - leaf k - 'ME::Time' 0 - time "
"i - - 0 - var g - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("refresh",751,G__MusEcal_dict_src_570_0_47, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MusEcal_dict_src_570_0_48, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&MERunManager::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MusEcal_dict_src_570_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MERunManager::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MusEcal_dict_src_570_0_50, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&MERunManager::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MusEcal_dict_src_570_0_51, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MERunManager::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__MusEcal_dict_src_570_0_52, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MusEcal_dict_src_570_0_53, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MusEcal_dict_src_570_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MusEcal_dict_src_570_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MusEcal_dict_src_570_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MERunManager::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MusEcal_dict_src_570_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MERunManager::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MusEcal_dict_src_570_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MERunManager::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MusEcal_dict_src_570_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MERunManager::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("MERunManager", 1154, G__MusEcal_dict_src_570_0_60, (int) ('i'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunManager), -1, 0, 1, 1, 1, 0, "u 'MERunManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MERunManager", 1280, G__MusEcal_dict_src_570_0_61, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MusEcal_dict_src_570_0_62, (int) ('u'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunManager), -1, 1, 1, 1, 1, 0, "u 'MERunManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMusEcal(void) {
   /* MusEcal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal));
   G__memfunc_setup("mgrName",711,G__MusEcal_dict_src_607_0_1, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString), -1, 0, 3, 3, 1, 0, 
"i - - 0 - lmr i - - 0 - type "
"i - - 0 - color", (char*)NULL, (void*) (TString (*)(int, int, int))(&MusEcal::mgrName), 0);
   G__memfunc_setup("MusEcal",682,G__MusEcal_dict_src_607_0_2, 105, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal), -1, 0, 2, 1, 1, 0, 
"i - - 0 'ME::iLaser' type i - - 0 'ME::iBlue' color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("runMgr",635,G__MusEcal_dict_src_607_0_3, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunManager), -1, 0, 1, 1, 1, 0, "i - - 0 - lmr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("runMgr",635,G__MusEcal_dict_src_607_0_4, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("curMgr",624,G__MusEcal_dict_src_607_0_5, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setType",750,G__MusEcal_dict_src_607_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - type i - - 0 'ME::iBlue' color", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setLMRegion",1097,G__MusEcal_dict_src_607_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - lmr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setTime",731,G__MusEcal_dict_src_607_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'ME::Time' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setChannel",1029,G__MusEcal_dict_src_607_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MEChannel' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setChannel",1029,G__MusEcal_dict_src_607_0_10, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - ig i - - 0 - ieta "
"i - - 0 - iphi g - - 0 'true' useEtaPhi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("oneLevelUp",1023,G__MusEcal_dict_src_607_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDefaultTime",1440,G__MusEcal_dict_src_607_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunAndSequence",1741,G__MusEcal_dict_src_607_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - run i - - 0 '1' seq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextSequence",1272,G__MusEcal_dict_src_607_0_14, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVar",629,G__MusEcal_dict_src_607_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 'MusEcal::iAPD' var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dumpVector",1065,G__MusEcal_dict_src_607_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ivar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("histConfig",1038,G__MusEcal_dict_src_607_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bookHistograms",1484,G__MusEcal_dict_src_607_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bookEBAPDHistograms",1832,G__MusEcal_dict_src_607_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bookEBPNHistograms",1777,G__MusEcal_dict_src_607_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bookEEAPDHistograms",1835,G__MusEcal_dict_src_607_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bookEEPNHistograms",1780,G__MusEcal_dict_src_607_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistograms",1480,G__MusEcal_dict_src_607_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillEBGlobalHistograms",2208,G__MusEcal_dict_src_607_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillEBLocalHistograms",2106,G__MusEcal_dict_src_607_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillEEGlobalHistograms",2211,G__MusEcal_dict_src_607_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillEELocalHistograms",2109,G__MusEcal_dict_src_607_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeGlobalHistograms",2205,G__MusEcal_dict_src_607_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("refresh",751,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("runMgr",635,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunManager), -1, 0, 3, 1, 2, 0, 
"i - - 0 - lmr i - - 0 - type "
"i - - 0 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBarrel",820,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hist_nbin",958,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 2, 0, "u 'TString' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hist_min",859,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 1, 1, 2, 0, "u 'TString' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hist_max",861,(G__InterfaceMethod) NULL, 102, -1, -1, 0, 1, 1, 2, 0, "u 'TString' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MusEcal_dict_src_607_0_35, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&MusEcal::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MusEcal_dict_src_607_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MusEcal::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MusEcal_dict_src_607_0_37, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&MusEcal::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MusEcal_dict_src_607_0_38, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MusEcal::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__MusEcal_dict_src_607_0_39, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MusEcal_dict_src_607_0_40, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MusEcal_dict_src_607_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MusEcal_dict_src_607_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MusEcal_dict_src_607_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MusEcal::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MusEcal_dict_src_607_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MusEcal::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MusEcal_dict_src_607_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MusEcal::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MusEcal_dict_src_607_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MusEcal::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("MusEcal", 682, G__MusEcal_dict_src_607_0_47, (int) ('i'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal), -1, 0, 1, 1, 1, 0, "u 'MusEcal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MusEcal", 808, G__MusEcal_dict_src_607_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MusEcal_dict_src_607_0_49, (int) ('u'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal), -1, 1, 1, 1, 1, 0, "u 'MusEcal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMEVarVector(void) {
   /* MEVarVector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEVarVector));
   G__memfunc_setup("MEVarVector",1070,G__MusEcal_dict_src_674_0_1, 105, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEVarVector), -1, 0, 1, 1, 1, 0, "i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTime",696,G__MusEcal_dict_src_674_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'ME::Time' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVal",623,G__MusEcal_dict_src_674_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"k - 'ME::Time' 0 - t i - - 0 - ii "
"f - - 0 - val g - - 0 'false' check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFlag",710,G__MusEcal_dict_src_674_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"k - 'ME::Time' 0 - t i - - 0 - ii "
"g - - 0 - flag g - - 0 'false' check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setValAndFlag",1276,G__MusEcal_dict_src_674_0_5, 121, -1, -1, 0, 5, 1, 1, 0, 
"k - 'ME::Time' 0 - t i - - 0 - ii "
"f - - 0 - val g - - 0 - flag "
"g - - 0 'false' check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getValByTime",1197,G__MusEcal_dict_src_674_0_6, 103, -1, -1, 0, 4, 1, 1, 0, 
"k - 'ME::Time' 0 - time i - - 0 - ii "
"f - - 1 - val g - - 1 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTime",719,G__MusEcal_dict_src_674_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >' 'vector<ME::Time>' 1 - time U 'METimeInterval' - 10 '0' timeInterval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getValAndFlag",1264,G__MusEcal_dict_src_674_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - ii u 'vector<unsigned long,allocator<unsigned long> >' 'vector<ME::Time>' 11 - time "
"u 'vector<float,allocator<float> >' 'vector<float>' 1 - val u 'vector<bool,allocator<bool> >' 'vector<bool>' 1 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeValAndFlag",1663,G__MusEcal_dict_src_674_0_9, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - ii u 'vector<unsigned long,allocator<unsigned long> >' 'vector<ME::Time>' 1 - time "
"u 'vector<float,allocator<float> >' 'vector<float>' 1 - val u 'vector<bool,allocator<bool> >' 'vector<bool>' 1 - flag "
"U 'METimeInterval' - 10 '0' timeInterval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MusEcal_dict_src_674_0_10, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&MEVarVector::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MusEcal_dict_src_674_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEVarVector::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MusEcal_dict_src_674_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&MEVarVector::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MusEcal_dict_src_674_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEVarVector::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__MusEcal_dict_src_674_0_14, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MusEcal_dict_src_674_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MusEcal_dict_src_674_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MusEcal_dict_src_674_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MusEcal_dict_src_674_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEVarVector::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MusEcal_dict_src_674_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MEVarVector::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MusEcal_dict_src_674_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEVarVector::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MusEcal_dict_src_674_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MEVarVector::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("MEVarVector", 1070, G__MusEcal_dict_src_674_0_22, (int) ('i'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEVarVector), -1, 0, 1, 1, 1, 0, "u 'MEVarVector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MEVarVector", 1196, G__MusEcal_dict_src_674_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MusEcal_dict_src_674_0_24, (int) ('u'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEVarVector), -1, 1, 1, 1, 1, 0, "u 'MEVarVector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMETimeInterval(void) {
   /* METimeInterval */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval));
   G__memfunc_setup("METimeInterval",1382,G__MusEcal_dict_src_684_0_1, 105, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval), -1, 0, 2, 1, 1, 0, 
"k - 'ME::Time' 0 - firstTime k - 'ME::Time' 0 - lastTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("split",556,G__MusEcal_dict_src_684_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'list<unsigned long,allocator<unsigned long> >' 'list<ME::Time>' 11 - times", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,G__MusEcal_dict_src_684_0_3, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval), -1, 0, 2, 1, 1, 0, 
"k - 'ME::Time' 0 - time h - - 0 '1000' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("first",552,G__MusEcal_dict_src_684_0_4, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("last",436,G__MusEcal_dict_src_684_0_5, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("level",536,G__MusEcal_dict_src_684_0_6, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("firstTime",951,G__MusEcal_dict_src_684_0_7, 107, -1, G__defined_typename("ME::Time"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lastTime",835,G__MusEcal_dict_src_684_0_8, 107, -1, G__defined_typename("ME::Time"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGood",613,G__MusEcal_dict_src_684_0_9, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("above",525,G__MusEcal_dict_src_684_0_10, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("next",447,G__MusEcal_dict_src_684_0_11, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("previous",893,G__MusEcal_dict_src_684_0_12, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("firstIn",735,G__MusEcal_dict_src_684_0_13, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lastIn",619,G__MusEcal_dict_src_684_0_14, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__MusEcal_dict_src_684_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("oneLine",714,G__MusEcal_dict_src_684_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inBrackets",1030,G__MusEcal_dict_src_684_0_17, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("METimeInterval",1382,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval), -1, 0, 5, 1, 4, 0, 
"k - 'ME::Time' 0 - firstTime k - 'ME::Time' 0 - lastTime "
"U 'METimeInterval' - 0 - previous U 'METimeInterval' - 0 - above "
"g - - 0 'true' OK", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cut",332,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval), -1, 0, 1, 1, 4, 0, "k - 'ME::Time' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MusEcal_dict_src_684_0_20, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&METimeInterval::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MusEcal_dict_src_684_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&METimeInterval::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MusEcal_dict_src_684_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&METimeInterval::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MusEcal_dict_src_684_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&METimeInterval::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__MusEcal_dict_src_684_0_24, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MusEcal_dict_src_684_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MusEcal_dict_src_684_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MusEcal_dict_src_684_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MusEcal_dict_src_684_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&METimeInterval::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MusEcal_dict_src_684_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&METimeInterval::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MusEcal_dict_src_684_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&METimeInterval::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MusEcal_dict_src_684_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&METimeInterval::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("METimeInterval", 1382, G__MusEcal_dict_src_684_0_32, (int) ('i'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval), -1, 0, 1, 1, 1, 0, "u 'METimeInterval' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~METimeInterval", 1508, G__MusEcal_dict_src_684_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MusEcal_dict_src_684_0_34, (int) ('u'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval), -1, 1, 1, 1, 1, 0, "u 'METimeInterval' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMECanvasHolder(void) {
   /* MECanvasHolder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MECanvasHolder));
   G__memfunc_setup("setPxAndPy",1008,G__MusEcal_dict_src_747_0_1, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - px i - - 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getPad",597,G__MusEcal_dict_src_747_0_2, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TPad), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPad",609,G__MusEcal_dict_src_747_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("curHist",738,G__MusEcal_dict_src_747_0_4, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TH1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCurHist",1038,G__MusEcal_dict_src_747_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCurXY",795,G__MusEcal_dict_src_747_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 1 - x f - - 1 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSessionStyle",1601,G__MusEcal_dict_src_747_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHistoStyle",1380,G__MusEcal_dict_src_747_0_8, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TH1' - 0 - -", (char*)NULL, (void*) (void (*)(TH1*))(&MECanvasHolder::setHistoStyle), 0);
   G__memfunc_setup("MECanvasHolder",1356,G__MusEcal_dict_src_747_0_9, 105, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MECanvasHolder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvas",904,G__MusEcal_dict_src_747_0_10, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'TCanvas' - 0 - canvas C - - 10 '\"\"' str1 "
"C - - 10 '\"\"' str2 C - - 10 '\"\"' str3 "
"C - - 10 '\"\"' str4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CanvasModified",1405,G__MusEcal_dict_src_747_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearWelcome",1203,G__MusEcal_dict_src_747_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowWelcome",1133,G__MusEcal_dict_src_747_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDate",682,G__MusEcal_dict_src_747_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHessPalette",1454,G__MusEcal_dict_src_747_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MusEcal_dict_src_747_0_16, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&MECanvasHolder::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MusEcal_dict_src_747_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MECanvasHolder::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MusEcal_dict_src_747_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&MECanvasHolder::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MusEcal_dict_src_747_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MECanvasHolder::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__MusEcal_dict_src_747_0_20, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MusEcal_dict_src_747_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MusEcal_dict_src_747_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MusEcal_dict_src_747_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MusEcal_dict_src_747_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MECanvasHolder::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MusEcal_dict_src_747_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MECanvasHolder::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MusEcal_dict_src_747_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MECanvasHolder::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MusEcal_dict_src_747_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MECanvasHolder::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("MECanvasHolder", 1356, G__MusEcal_dict_src_747_0_28, (int) ('i'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MECanvasHolder), -1, 0, 1, 1, 1, 0, "u 'MECanvasHolder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MECanvasHolder", 1482, G__MusEcal_dict_src_747_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MusEcal_dict_src_747_0_30, (int) ('u'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MECanvasHolder), -1, 1, 1, 1, 1, 0, "u 'MECanvasHolder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMEEBDisplay(void) {
   /* MEEBDisplay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEBDisplay));
   G__memfunc_setup("getNode",710,G__MusEcal_dict_src_748_0_1, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_pairlEfloatcOfloatgR), G__defined_typename("MEEBGeom::EtaPhiPoint"), 0, 5, 3, 1, 0, 
"i - - 0 - iSM i - 'MEEBGeom::EBTTLocalCoord' 0 - iX "
"i - 'MEEBGeom::EBTTLocalCoord' 0 - iY i - - 0 - jx "
"i - - 0 - jy", (char*)NULL, (void*) (MEEBGeom::EtaPhiPoint (*)(int, MEEBGeom::EBTTLocalCoord, MEEBGeom::EBTTLocalCoord, int, int))(&MEEBDisplay::getNode), 0);
   G__memfunc_setup("drawEB",565,G__MusEcal_dict_src_748_0_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEEBDisplay::drawEB), 0);
   G__memfunc_setup("drawSM",590,G__MusEcal_dict_src_748_0_3, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - iSM f - - 0 '0' shift", (char*)NULL, (void*) (void (*)(int, float))(&MEEBDisplay::drawSM), 0);
   G__memfunc_setup("drawTT",598,G__MusEcal_dict_src_748_0_4, 121, -1, -1, 0, 4, 3, 1, 0, 
"i - - 0 - iSM i - 'MEEBGeom::EBTTLocalCoord' 0 - iX "
"i - 'MEEBGeom::EBTTLocalCoord' 0 - iY f - - 0 '0' shift", (char*)NULL, (void*) (void (*)(int, MEEBGeom::EBTTLocalCoord, MEEBGeom::EBTTLocalCoord, float))(&MEEBDisplay::drawTT), 0);
   G__memfunc_setup("drawXtal",839,G__MusEcal_dict_src_748_0_5, 121, -1, -1, 0, 4, 3, 1, 0, 
"i - 'MEEBGeom::EBGlobalCoord' 0 - ieta i - 'MEEBGeom::EBGlobalCoord' 0 - iphi "
"i - - 0 'kBlue' color f - - 0 '0' shift", (char*)NULL, (void*) (void (*)(MEEBGeom::EBGlobalCoord, MEEBGeom::EBGlobalCoord, int, float))(&MEEBDisplay::drawXtal), 0);
   G__memfunc_setup("drawEBGlobal",1158,G__MusEcal_dict_src_748_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEEBDisplay::drawEBGlobal), 0);
   G__memfunc_setup("drawEBLocal",1056,G__MusEcal_dict_src_748_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEEBDisplay::drawEBLocal), 0);
   G__memfunc_setup("getXtalPolyLine",1541,G__MusEcal_dict_src_748_0_8, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TPolyLine), -1, 0, 3, 3, 1, 0, 
"i - 'MEEBGeom::EBGlobalCoord' 0 - ieta i - 'MEEBGeom::EBGlobalCoord' 0 - iphi "
"f - - 0 '0' shift", (char*)NULL, (void*) (TPolyLine* (*)(MEEBGeom::EBGlobalCoord, MEEBGeom::EBGlobalCoord, float))(&MEEBDisplay::getXtalPolyLine), 0);
   G__memfunc_setup("getTTPolyLine",1300,G__MusEcal_dict_src_748_0_9, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TPolyLine), -1, 0, 4, 3, 1, 0, 
"i - - 0 - iSM i - 'MEEBGeom::EBTTLocalCoord' 0 - iX "
"i - 'MEEBGeom::EBTTLocalCoord' 0 - iY f - - 0 '0' shift", (char*)NULL, (void*) (TPolyLine* (*)(int, MEEBGeom::EBTTLocalCoord, MEEBGeom::EBTTLocalCoord, float))(&MEEBDisplay::getTTPolyLine), 0);
   G__memfunc_setup("getSMPolyLine",1292,G__MusEcal_dict_src_748_0_10, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TPolyLine), -1, 0, 2, 3, 1, 0, 
"i - - 0 - iSM f - - 0 '0' shift", (char*)NULL, (void*) (TPolyLine* (*)(int, float))(&MEEBDisplay::getSMPolyLine), 0);
   G__memfunc_setup("drawRz",634,G__MusEcal_dict_src_748_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEEBDisplay::drawRz), 0);
   G__memfunc_setup("refresh",751,G__MusEcal_dict_src_748_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEEBDisplay::refresh), 0);
   G__memfunc_setup("setPhiLimits",1247,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 3, 4, 0, 
"i - - 0 - iSM i - 'MEEBGeom::EBLocalCoord' 0 - iy "
"i - 'MEEBGeom::EBGlobalCoord' 0 - iphi f - - 0 - phioverpi_0 "
"f - - 0 - phioverpi_1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEtaLimits",1240,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 3, 4, 0, 
"i - - 0 - iSM i - 'MEEBGeom::EBLocalCoord' 0 - ix "
"i - 'MEEBGeom::EBGlobalCoord' 0 - ieta f - - 0 - eta_0 "
"f - - 0 - eta_1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSM_2_and_20",1232,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 3, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRzXtals",1060,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 3, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerTObject",1552,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 3, 4, 0, "U 'TObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MusEcal_dict_src_748_0_18, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&MEEBDisplay::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MusEcal_dict_src_748_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEEBDisplay::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MusEcal_dict_src_748_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&MEEBDisplay::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MusEcal_dict_src_748_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEEBDisplay::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__MusEcal_dict_src_748_0_22, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MusEcal_dict_src_748_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MusEcal_dict_src_748_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MusEcal_dict_src_748_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MusEcal_dict_src_748_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEEBDisplay::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MusEcal_dict_src_748_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MEEBDisplay::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MusEcal_dict_src_748_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEEBDisplay::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MusEcal_dict_src_748_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MEEBDisplay::DeclFileLine), 0);
   // automatic default constructor
   G__memfunc_setup("MEEBDisplay", 1007, G__MusEcal_dict_src_748_0_30, (int) ('i'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEBDisplay), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MEEBDisplay", 1007, G__MusEcal_dict_src_748_0_31, (int) ('i'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEBDisplay), -1, 0, 1, 1, 1, 0, "u 'MEEBDisplay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MEEBDisplay", 1133, G__MusEcal_dict_src_748_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MusEcal_dict_src_748_0_33, (int) ('u'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEBDisplay), -1, 1, 1, 1, 1, 0, "u 'MEEBDisplay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMEEEDisplay(void) {
   /* MEEEDisplay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEEDisplay));
   G__memfunc_setup("getNode",710,G__MusEcal_dict_src_767_0_1, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_pairlEfloatcOfloatgR), G__defined_typename("MEEEGeom::EtaPhiPoint"), 0, 5, 3, 1, 0, 
"i - 'MEEEGeom::SuperCrysCoord' 0 - iX i - 'MEEEGeom::SuperCrysCoord' 0 - iY "
"i - - 0 - iz i - - 0 - jx "
"i - - 0 - jy", (char*)NULL, (void*) (MEEEGeom::EtaPhiPoint (*)(MEEEGeom::SuperCrysCoord, MEEEGeom::SuperCrysCoord, int, int, int))(&MEEEDisplay::getNode), 0);
   G__memfunc_setup("drawEEGlobal",1161,G__MusEcal_dict_src_767_0_2, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEEEDisplay::drawEEGlobal), 0);
   G__memfunc_setup("drawEELocal",1059,G__MusEcal_dict_src_767_0_3, 121, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - isect", (char*)NULL, (void*) (void (*)(int))(&MEEEDisplay::drawEELocal), 0);
   G__memfunc_setup("drawEE",568,G__MusEcal_dict_src_767_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEEEDisplay::drawEE), 0);
   G__memfunc_setup("drawSC",580,G__MusEcal_dict_src_767_0_5, 121, -1, -1, 0, 4, 3, 1, 0, 
"i - 'MEEEGeom::SuperCrysCoord' 0 - iX i - 'MEEEGeom::SuperCrysCoord' 0 - iY "
"i - - 0 - iz f - - 0 '0' shift", (char*)NULL, (void*) (void (*)(MEEEGeom::SuperCrysCoord, MEEEGeom::SuperCrysCoord, int, float))(&MEEEDisplay::drawSC), 0);
   G__memfunc_setup("drawXtal",839,G__MusEcal_dict_src_767_0_6, 121, -1, -1, 0, 5, 3, 1, 0, 
"i - 'MEEEGeom::CrysCoord' 0 - ix i - 'MEEEGeom::CrysCoord' 0 - iy "
"i - - 0 - iz i - - 0 'kBlue' color "
"f - - 0 '0' shift", (char*)NULL, (void*) (void (*)(MEEEGeom::CrysCoord, MEEEGeom::CrysCoord, int, int, float))(&MEEEDisplay::drawXtal), 0);
   G__memfunc_setup("getXtalPolyLine",1541,G__MusEcal_dict_src_767_0_7, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TPolyLine), -1, 0, 4, 3, 1, 0, 
"i - 'MEEEGeom::CrysCoord' 0 - ix i - 'MEEEGeom::CrysCoord' 0 - iy "
"i - - 0 - iz f - - 0 '0' shift", (char*)NULL, (void*) (TPolyLine* (*)(MEEEGeom::CrysCoord, MEEEGeom::CrysCoord, int, float))(&MEEEDisplay::getXtalPolyLine), 0);
   G__memfunc_setup("getSCPolyLine",1282,G__MusEcal_dict_src_767_0_8, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TPolyLine), -1, 0, 4, 3, 1, 0, 
"i - 'MEEEGeom::SuperCrysCoord' 0 - iX i - 'MEEEGeom::SuperCrysCoord' 0 - iY "
"i - - 0 - iz f - - 0 '0' shift", (char*)NULL, (void*) (TPolyLine* (*)(MEEEGeom::SuperCrysCoord, MEEEGeom::SuperCrysCoord, int, float))(&MEEEDisplay::getSCPolyLine), 0);
   G__memfunc_setup("drawRz",634,G__MusEcal_dict_src_767_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEEEDisplay::drawRz), 0);
   G__memfunc_setup("refresh",751,G__MusEcal_dict_src_767_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEEEDisplay::refresh), 0);
   G__memfunc_setup("sc_nodes",846,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 3, 4, 0, 
"i - - 0 - itype u 'vector<int,allocator<int> >' 'vector<int>' 1 - jx "
"u 'vector<int,allocator<int> >' 'vector<int>' 1 - jy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 3, 4, 0, 
"i - - 0 - iX i - - 0 - iY "
"i - - 0 - jx i - - 0 - jy "
"f - - 0 - eta f - - 0 - phioverpi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirstQuadrant",1684,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 3, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRzXtals",1060,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 3, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerTObject",1552,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 3, 4, 0, "U 'TObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MusEcal_dict_src_767_0_16, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&MEEEDisplay::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MusEcal_dict_src_767_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEEEDisplay::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MusEcal_dict_src_767_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&MEEEDisplay::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MusEcal_dict_src_767_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEEEDisplay::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__MusEcal_dict_src_767_0_20, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MusEcal_dict_src_767_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MusEcal_dict_src_767_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MusEcal_dict_src_767_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MusEcal_dict_src_767_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEEEDisplay::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MusEcal_dict_src_767_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MEEEDisplay::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MusEcal_dict_src_767_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEEEDisplay::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MusEcal_dict_src_767_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MEEEDisplay::DeclFileLine), 0);
   // automatic default constructor
   G__memfunc_setup("MEEEDisplay", 1010, G__MusEcal_dict_src_767_0_28, (int) ('i'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEEDisplay), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MEEEDisplay", 1010, G__MusEcal_dict_src_767_0_29, (int) ('i'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEEDisplay), -1, 0, 1, 1, 1, 0, "u 'MEEEDisplay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MEEEDisplay", 1136, G__MusEcal_dict_src_767_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MusEcal_dict_src_767_0_31, (int) ('u'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEEDisplay), -1, 1, 1, 1, 1, 0, "u 'MEEEDisplay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMEClickableCanvas(void) {
   /* MEClickableCanvas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEClickableCanvas));
   G__memfunc_setup("MEClickableCanvas",1640,G__MusEcal_dict_src_1021_0_1, 105, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEClickableCanvas), -1, 0, 5, 1, 1, 0, 
"C - - 10 - name U 'TGWindow' - 10 - p "
"h - 'UInt_t' 0 - w h - 'UInt_t' 0 - h "
"U 'MECanvasHolder' - 0 - gui", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleContainerDoubleClick",2608,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'Event_t' - 0 - event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__MusEcal_dict_src_1021_0_3, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&MEClickableCanvas::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MusEcal_dict_src_1021_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEClickableCanvas::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MusEcal_dict_src_1021_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&MEClickableCanvas::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MusEcal_dict_src_1021_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEClickableCanvas::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MusEcal_dict_src_1021_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MusEcal_dict_src_1021_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEClickableCanvas::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MusEcal_dict_src_1021_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MEClickableCanvas::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MusEcal_dict_src_1021_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEClickableCanvas::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MusEcal_dict_src_1021_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MEClickableCanvas::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~MEClickableCanvas", 1766, G__MusEcal_dict_src_1021_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMEPlotWindow(void) {
   /* MEPlotWindow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEPlotWindow));
   G__memfunc_setup("MEPlotWindow",1193,G__MusEcal_dict_src_1022_0_1, 105, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEPlotWindow), -1, 0, 9, 1, 1, 0, 
"U 'TGWindow' - 10 - p U 'MusEcalGUI' - 0 - main "
"C - - 10 - name h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h C - - 10 '\"\"' str1 "
"C - - 10 '\"\"' str2 C - - 10 '\"\"' str3 "
"C - - 10 '\"\"' str4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPrintName",1242,G__MusEcal_dict_src_1022_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - printName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("name",417,G__MusEcal_dict_src_1022_0_3, 117, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write",555,G__MusEcal_dict_src_1022_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPxAndPy",1008,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - px i - - 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseWindow",1134,G__MusEcal_dict_src_1022_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoClose",681,G__MusEcal_dict_src_1022_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MusEcal_dict_src_1022_0_8, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&MEPlotWindow::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MusEcal_dict_src_1022_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEPlotWindow::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MusEcal_dict_src_1022_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&MEPlotWindow::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MusEcal_dict_src_1022_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEPlotWindow::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MusEcal_dict_src_1022_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MusEcal_dict_src_1022_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEPlotWindow::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MusEcal_dict_src_1022_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MEPlotWindow::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MusEcal_dict_src_1022_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEPlotWindow::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MusEcal_dict_src_1022_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MEPlotWindow::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("MEPlotWindow", 1193, G__MusEcal_dict_src_1022_0_20, (int) ('i'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEPlotWindow), -1, 0, 1, 1, 1, 0, "u 'MEPlotWindow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MEPlotWindow", 1319, G__MusEcal_dict_src_1022_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MusEcal_dict_src_1022_0_22, (int) ('u'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEPlotWindow), -1, 1, 1, 1, 1, 0, "u 'MEPlotWindow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMERunPanel(void) {
   /* MERunPanel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunPanel));
   G__memfunc_setup("MERunPanel",951,G__MusEcal_dict_src_1023_0_1, 105, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunPanel), -1, 0, 4, 1, 1, 0, 
"U 'TGWindow' - 10 - p U 'MusEcalGUI' - 0 - main "
"h - 'UInt_t' 0 - w h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,G__MusEcal_dict_src_1023_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoClose",681,G__MusEcal_dict_src_1023_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurrentRun",1348,G__MusEcal_dict_src_1023_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MusEcal_dict_src_1023_0_5, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&MERunPanel::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MusEcal_dict_src_1023_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MERunPanel::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MusEcal_dict_src_1023_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&MERunPanel::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MusEcal_dict_src_1023_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MERunPanel::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__MusEcal_dict_src_1023_0_9, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MusEcal_dict_src_1023_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MusEcal_dict_src_1023_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MusEcal_dict_src_1023_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MusEcal_dict_src_1023_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MERunPanel::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MusEcal_dict_src_1023_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MERunPanel::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MusEcal_dict_src_1023_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MERunPanel::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MusEcal_dict_src_1023_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MERunPanel::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("MERunPanel", 951, G__MusEcal_dict_src_1023_0_17, (int) ('i'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunPanel), -1, 0, 1, 1, 1, 0, "u 'MERunPanel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MERunPanel", 1077, G__MusEcal_dict_src_1023_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MusEcal_dict_src_1023_0_19, (int) ('u'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunPanel), -1, 1, 1, 1, 1, 0, "u 'MERunPanel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMEChanPanel(void) {
   /* MEChanPanel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEChanPanel));
   G__memfunc_setup("MEChanPanel",1020,G__MusEcal_dict_src_1024_0_1, 105, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEChanPanel), -1, 0, 4, 1, 1, 0, 
"U 'TGWindow' - 10 - p U 'MusEcalGUI' - 0 - main "
"h - 'UInt_t' 0 - w h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,G__MusEcal_dict_src_1024_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoClose",681,G__MusEcal_dict_src_1024_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectChannel",1305,G__MusEcal_dict_src_1024_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectID",749,G__MusEcal_dict_src_1024_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectXY",785,G__MusEcal_dict_src_1024_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectXYZ",875,G__MusEcal_dict_src_1024_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MusEcal_dict_src_1024_0_8, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&MEChanPanel::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MusEcal_dict_src_1024_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEChanPanel::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MusEcal_dict_src_1024_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&MEChanPanel::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MusEcal_dict_src_1024_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEChanPanel::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__MusEcal_dict_src_1024_0_12, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MusEcal_dict_src_1024_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MusEcal_dict_src_1024_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MusEcal_dict_src_1024_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MusEcal_dict_src_1024_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEChanPanel::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MusEcal_dict_src_1024_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MEChanPanel::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MusEcal_dict_src_1024_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEChanPanel::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MusEcal_dict_src_1024_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MEChanPanel::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("MEChanPanel", 1020, G__MusEcal_dict_src_1024_0_20, (int) ('i'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEChanPanel), -1, 0, 1, 1, 1, 0, "u 'MEChanPanel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MEChanPanel", 1146, G__MusEcal_dict_src_1024_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MusEcal_dict_src_1024_0_22, (int) ('u'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEChanPanel), -1, 1, 1, 1, 1, 0, "u 'MEChanPanel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMELeafPanel(void) {
   /* MELeafPanel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MELeafPanel));
   G__memfunc_setup("MELeafPanel",1018,G__MusEcal_dict_src_1025_0_1, 105, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MELeafPanel), -1, 0, 4, 1, 1, 0, 
"U 'TGWindow' - 10 - p U 'MusEcalGUI' - 0 - main "
"h - 'UInt_t' 0 - w h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,G__MusEcal_dict_src_1025_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoClose",681,G__MusEcal_dict_src_1025_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoPlot",594,G__MusEcal_dict_src_1025_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoDiffPlot",971,G__MusEcal_dict_src_1025_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoOneLevelUp",1170,G__MusEcal_dict_src_1025_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVar",597,G__MusEcal_dict_src_1025_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZoom",721,G__MusEcal_dict_src_1025_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MusEcal_dict_src_1025_0_9, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&MELeafPanel::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MusEcal_dict_src_1025_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MELeafPanel::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MusEcal_dict_src_1025_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&MELeafPanel::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MusEcal_dict_src_1025_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MELeafPanel::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__MusEcal_dict_src_1025_0_13, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MusEcal_dict_src_1025_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MusEcal_dict_src_1025_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MusEcal_dict_src_1025_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MusEcal_dict_src_1025_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MELeafPanel::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MusEcal_dict_src_1025_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MELeafPanel::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MusEcal_dict_src_1025_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MELeafPanel::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MusEcal_dict_src_1025_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MELeafPanel::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("MELeafPanel", 1018, G__MusEcal_dict_src_1025_0_21, (int) ('i'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MELeafPanel), -1, 0, 1, 1, 1, 0, "u 'MELeafPanel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MELeafPanel", 1144, G__MusEcal_dict_src_1025_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MusEcal_dict_src_1025_0_23, (int) ('u'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MELeafPanel), -1, 1, 1, 1, 1, 0, "u 'MELeafPanel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMEMultiVarPanel(void) {
   /* MEMultiVarPanel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEMultiVarPanel));
   G__memfunc_setup("MEMultiVarPanel",1462,G__MusEcal_dict_src_1026_0_1, 105, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEMultiVarPanel), -1, 0, 4, 1, 1, 0, 
"U 'TGWindow' - 10 - p U 'MusEcalGUI' - 0 - main "
"h - 'UInt_t' 0 - w h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,G__MusEcal_dict_src_1026_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoClose",681,G__MusEcal_dict_src_1026_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoGo",361,G__MusEcal_dict_src_1026_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MusEcal_dict_src_1026_0_5, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&MEMultiVarPanel::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MusEcal_dict_src_1026_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEMultiVarPanel::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MusEcal_dict_src_1026_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&MEMultiVarPanel::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MusEcal_dict_src_1026_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MEMultiVarPanel::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__MusEcal_dict_src_1026_0_9, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MusEcal_dict_src_1026_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MusEcal_dict_src_1026_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MusEcal_dict_src_1026_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MusEcal_dict_src_1026_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEMultiVarPanel::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MusEcal_dict_src_1026_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MEMultiVarPanel::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MusEcal_dict_src_1026_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MEMultiVarPanel::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MusEcal_dict_src_1026_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MEMultiVarPanel::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("MEMultiVarPanel", 1462, G__MusEcal_dict_src_1026_0_17, (int) ('i'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEMultiVarPanel), -1, 0, 1, 1, 1, 0, "u 'MEMultiVarPanel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MEMultiVarPanel", 1588, G__MusEcal_dict_src_1026_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MusEcal_dict_src_1026_0_19, (int) ('u'), G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEMultiVarPanel), -1, 1, 1, 1, 1, 0, "u 'MEMultiVarPanel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMusEcalGUI(void) {
   /* MusEcalGUI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI));
   G__memfunc_setup("MusEcalGUI",911,G__MusEcal_dict_src_1027_0_1, 105, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MusEcalGUI",911,G__MusEcal_dict_src_1027_0_2, 105, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI), -1, 0, 5, 1, 1, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h i - - 0 'ME::iLaser' type "
"i - - 0 'ME::iBlue' color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("exitProg",850,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("refresh",751,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setType",750,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - type i - - 0 '0' color", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setLMRegion",1097,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - lmr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setTime",731,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "k - 'ME::Time' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setChannel",1029,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'MEChannel' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("welcome",748,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeVector",1346,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'vector<unsigned long,allocator<unsigned long> >' 'vector<ME::Time>' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHistoryVector",1701,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 7, 1, 4, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >' 'vector<ME::Time>' 1 - - u 'vector<float,allocator<float> >' 'vector<float>' 1 - - "
"u 'vector<bool,allocator<bool> >' 'vector<bool>' 1 - - u 'vector<float,allocator<float> >' 'vector<float>' 1 - - "
"g - - 1 - b_ f - - 1 - miny "
"f - - 1 - maxy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHistoryVector",1701,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 9, 1, 4, 0, 
"h - - 1 - nrun F - - 0 - x "
"F - - 0 - y F - - 0 - ex "
"F - - 0 - ey G - - 0 - ok "
"f - - 1 - norm f - - 1 - min "
"f - - 1 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawHistoryGraph",1682,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 12, 1, 4, 0, 
"h - - 0 - n F - - 0 - x "
"F - - 0 - y F - - 0 - ex "
"F - - 0 - ey G - - 0 - ok "
"i - - 0 - markerStyle f - - 0 - markerSize "
"i - - 0 - markerColor i - - 0 - lineWidth "
"i - - 0 - lineColor C - - 10 '\"LPSame\"' graphOpt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createRunPanel",1433,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createChanPanel",1502,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "g - - 0 'false' ifexists", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createLeafPanel",1500,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createMultiVarPanel",1944,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawHist",838,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawAPDHist",1051,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawPNHist",996,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawMTQHist",1080,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawAPDAnim",1032,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("historyPlot",1201,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("leafPlot",823,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("multiVarPlot",1267,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWindow",952,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEPlotWindow), -1, 0, 4, 1, 4, 0, 
"u 'TString' - 0 - - i - - 0 - opt "
"i - - 0 - w i - - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPxAndPy",1008,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - px i - - 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("windowClicked",1351,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'MEPlotWindow' - 0 - canv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setupMainWindow",1582,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLMRMenu",972,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleFileMenu",1377,G__MusEcal_dict_src_1027_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleHistMenu",1401,G__MusEcal_dict_src_1027_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleHistoryMenu",1747,G__MusEcal_dict_src_1027_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleChannelMenu",1690,G__MusEcal_dict_src_1027_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MusEcal_dict_src_1027_0_35, 85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&MusEcalGUI::Class), 0);
   G__memfunc_setup("Class_Name",982,G__MusEcal_dict_src_1027_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MusEcalGUI::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__MusEcal_dict_src_1027_0_37, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&MusEcalGUI::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__MusEcal_dict_src_1027_0_38, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&MusEcalGUI::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MusEcal_dict_srcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MusEcal_dict_src_1027_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MusEcal_dict_src_1027_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MusEcalGUI::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MusEcal_dict_src_1027_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MusEcalGUI::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__MusEcal_dict_src_1027_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&MusEcalGUI::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MusEcal_dict_src_1027_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&MusEcalGUI::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~MusEcalGUI", 1037, G__MusEcal_dict_src_1027_0_47, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMusEcal_dict_src() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {
}

static void G__cpp_setup_global9() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMusEcal_dict_src() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
  G__cpp_setup_global9();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMusEcal_dict_src() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MusEcal_dict_srcLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR = { "vector<unsigned long,allocator<unsigned long> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_pairlEintcOintgR = { "pair<int,int>" , 115 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MEChannel = { "MEChannel" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_ME = { "ME" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MEcLcLHeader = { "ME::Header" , 115 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MEcLcLSettings = { "ME::Settings" , 115 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_vectorlEMEChannelmUcOallocatorlEMEChannelmUgRsPgR = { "vector<MEChannel*,allocator<MEChannel*> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEMEChannelmUcOallocatorlEMEChannelmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MEChannel*,allocator<MEChannel*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TPolyLine = { "TPolyLine" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_pairlEfloatcOfloatgR = { "pair<float,float>" , 115 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_listlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR = { "list<pair<float,float>,allocator<pair<float,float> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MERun = { "MERun" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MERunManager = { "MERunManager" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplETStringcOTH2mUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTH2mUgRsPgRsPgR = { "map<TString,TH2*,less<TString>,allocator<pair<const TString,TH2*> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplETStringcOunsignedsPintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOunsignedsPintgRsPgRsPgR = { "map<TString,unsigned int,less<TString>,allocator<pair<const TString,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR = { "map<TString,float,less<TString>,allocator<pair<const TString,float> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MusEcal = { "MusEcal" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgR = { "map<unsigned long,MERun*,less<unsigned long>,allocator<pair<const unsigned long,MERun*> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgRcLcLiterator = { "map<unsigned long,MERun*,less<unsigned long>,allocator<pair<const unsigned long,MERun*> > >::iterator" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplEunsignedsPlongcOfloatcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOfloatgRsPgRsPgR = { "map<unsigned long,float,less<unsigned long>,allocator<pair<const unsigned long,float> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplEunsignedsPlongcOboolcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOboolgRsPgRsPgR = { "map<unsigned long,bool,less<unsigned long>,allocator<pair<const unsigned long,bool> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_pairlEfloatcOboolgR = { "pair<float,bool>" , 115 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplEunsignedsPlongcOpairlEfloatcOboolgRcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOpairlEfloatcOboolgRsPgRsPgRsPgR = { "map<unsigned long,pair<float,bool>,less<unsigned long>,allocator<pair<const unsigned long,pair<float,bool> > > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_vectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgR = { "vector<pair<float,bool>,allocator<pair<float,bool> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<float,bool>,allocator<pair<float,bool> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplEunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUgRsPgRsPgR = { "map<unsigned long,vector<pair<float,bool>,allocator<pair<float,bool> > >*,less<unsigned long>,allocator<pair<const unsigned long,vector<pair<float,bool>,allocator<pair<float,bool> > >*> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MusEcalcLcLHistCateg = { "MusEcal::HistCateg" , 101 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MusEcalcLcLHistType = { "MusEcal::HistType" , 101 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MusEcalcLcLdA = { "MusEcal::$" , 101 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplETStringcOMERunManagermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMERunManagermUgRsPgRsPgR = { "map<TString,MERunManager*,less<TString>,allocator<pair<const TString,MERunManager*> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplETStringcOTH1mUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTH1mUgRsPgRsPgR = { "map<TString,TH1*,less<TString>,allocator<pair<const TString,TH1*> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR = { "map<TString,int,less<TString>,allocator<pair<const TString,int> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MEVarVector = { "MEVarVector" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplEMEChannelmUcOMEVarVectormUcOlesslEMEChannelmUgRcOallocatorlEpairlEMEChannelmUsPconstcOMEVarVectormUgRsPgRsPgR = { "map<MEChannel*,MEVarVector*,less<MEChannel*>,allocator<pair<MEChannel* const,MEVarVector*> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_METimeInterval = { "METimeInterval" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_listlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR = { "list<unsigned long,allocator<unsigned long> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TText = { "TText" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TLatex = { "TLatex" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TPaveText = { "TPaveText" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_Event_t = { "Event_t" , 115 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MECanvasHolder = { "MECanvasHolder" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MEEBDisplay = { "MEEBDisplay" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplEintcOpairlEfloatcOfloatgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEfloatcOfloatgRsPgRsPgRsPgR = { "map<int,pair<float,float>,less<int>,allocator<pair<const int,pair<float,float> > > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplEintcOTPolyLinemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTPolyLinemUgRsPgRsPgR = { "map<int,TPolyLine*,less<int>,allocator<pair<const int,TPolyLine*> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_listlETObjectmUcOallocatorlETObjectmUgRsPgR = { "list<TObject*,allocator<TObject*> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MEEEDisplay = { "MEEEDisplay" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGLayoutHints = { "TGLayoutHints" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGVerticalFrame = { "TGVerticalFrame" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGHorizontalFrame = { "TGHorizontalFrame" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGTransientFrame = { "TGTransientFrame" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGGroupFrame = { "TGGroupFrame" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGPopupMenu = { "TGPopupMenu" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGCanvas = { "TGCanvas" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGListBox = { "TGListBox" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGLabel = { "TGLabel" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGNumberEntry = { "TGNumberEntry" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGMenuBar = { "TGMenuBar" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TRootEmbeddedCanvas = { "TRootEmbeddedCanvas" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_TGDockableFrame = { "TGDockableFrame" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MEClickableCanvas = { "MEClickableCanvas" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MEPlotWindow = { "MEPlotWindow" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MERunPanel = { "MERunPanel" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MEChanPanel = { "MEChanPanel" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MELeafPanel = { "MELeafPanel" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MEMultiVarPanel = { "MEMultiVarPanel" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MusEcalGUI = { "MusEcalGUI" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_MusEcalGUIcLcLdA = { "MusEcalGUI::$" , 101 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_maplETStringcOMEPlotWindowmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMEPlotWindowmUgRsPgRsPgR = { "map<TString,MEPlotWindow*,less<TString>,allocator<pair<const TString,MEPlotWindow*> > >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_vectorlETGPopupMenumUcOallocatorlETGPopupMenumUgRsPgR = { "vector<TGPopupMenu*,allocator<TGPopupMenu*> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETGPopupMenumUcOallocatorlETGPopupMenumUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGPopupMenu*,allocator<TGPopupMenu*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_vectorlETGComboBoxmUcOallocatorlETGComboBoxmUgRsPgR = { "vector<TGComboBox*,allocator<TGComboBox*> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETGComboBoxmUcOallocatorlETGComboBoxmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGComboBox*,allocator<TGComboBox*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_vectorlETGGroupFramemUcOallocatorlETGGroupFramemUgRsPgR = { "vector<TGGroupFrame*,allocator<TGGroupFrame*> >" , 99 , -1 };
G__linked_taginfo G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETGGroupFramemUcOallocatorlETGGroupFramemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGGroupFrame*,allocator<TGGroupFrame*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMusEcal_dict_src() {
  G__MusEcal_dict_srcLN_TClass.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TBuffer.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TMemberInspector.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TObject.tagnum = -1 ;
  G__MusEcal_dict_srcLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TString.tagnum = -1 ;
  G__MusEcal_dict_srcLN_pairlEintcOintgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TFile.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TH1.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TH2.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TTree.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TBranch.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MEChannel.tagnum = -1 ;
  G__MusEcal_dict_srcLN_ME.tagnum = -1 ;
  G__MusEcal_dict_srcLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MEcLcLHeader.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MEcLcLSettings.tagnum = -1 ;
  G__MusEcal_dict_srcLN_vectorlEMEChannelmUcOallocatorlEMEChannelmUgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEMEChannelmUcOallocatorlEMEChannelmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TPolyLine.tagnum = -1 ;
  G__MusEcal_dict_srcLN_pairlEfloatcOfloatgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_listlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MERun.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MERunManager.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplETStringcOTH2mUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTH2mUgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplETStringcOunsignedsPintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TCanvas.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MusEcal.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplEunsignedsPlongcOfloatcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplEunsignedsPlongcOboolcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOboolgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_pairlEfloatcOboolgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplEunsignedsPlongcOpairlEfloatcOboolgRcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOpairlEfloatcOboolgRsPgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_vectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplEunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MusEcalcLcLHistCateg.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MusEcalcLcLHistType.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MusEcalcLcLdA.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplETStringcOMERunManagermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMERunManagermUgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplETStringcOTH1mUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTH1mUgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MEVarVector.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplEMEChannelmUcOMEVarVectormUcOlesslEMEChannelmUgRcOallocatorlEpairlEMEChannelmUsPconstcOMEVarVectormUgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_METimeInterval.tagnum = -1 ;
  G__MusEcal_dict_srcLN_listlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TText.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TLatex.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TPaveText.tagnum = -1 ;
  G__MusEcal_dict_srcLN_Event_t.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TQObject.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TPad.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MECanvasHolder.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MEEBDisplay.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplEintcOpairlEfloatcOfloatgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEfloatcOfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplEintcOTPolyLinemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTPolyLinemUgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_listlETObjectmUcOallocatorlETObjectmUgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MEEEDisplay.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGObject.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGWindow.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGFrame.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGCompositeFrame.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGLayoutHints.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGTextButton.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGVerticalFrame.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGHorizontalFrame.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGMainFrame.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGTransientFrame.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGGroupFrame.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGPopupMenu.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGCanvas.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGListBox.tagnum = -1 ;
  G__MusEcal_dict_srcLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGLabel.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGNumberEntry.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGMenuBar.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TRootEmbeddedCanvas.tagnum = -1 ;
  G__MusEcal_dict_srcLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_TGDockableFrame.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MEClickableCanvas.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MEPlotWindow.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MERunPanel.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MEChanPanel.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MELeafPanel.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MEMultiVarPanel.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MusEcalGUI.tagnum = -1 ;
  G__MusEcal_dict_srcLN_MusEcalGUIcLcLdA.tagnum = -1 ;
  G__MusEcal_dict_srcLN_maplETStringcOMEPlotWindowmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMEPlotWindowmUgRsPgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_vectorlETGPopupMenumUcOallocatorlETGPopupMenumUgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETGPopupMenumUcOallocatorlETGPopupMenumUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_vectorlETGComboBoxmUcOallocatorlETGComboBoxmUgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETGComboBoxmUcOallocatorlETGComboBoxmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_vectorlETGGroupFramemUcOallocatorlETGGroupFramemUgRsPgR.tagnum = -1 ;
  G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETGGroupFramemUcOallocatorlETGGroupFramemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMusEcal_dict_src() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TClass);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TObject);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TString);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_pairlEintcOintgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TFile);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TH1);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TH2);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TTree);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TBranch);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_MEChannel);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_ME);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_MEcLcLHeader);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_MEcLcLSettings);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_vectorlEMEChannelmUcOallocatorlEMEChannelmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEMEChannelmUcOallocatorlEMEChannelmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TPolyLine);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_pairlEfloatcOfloatgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_listlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERun),sizeof(MERun),-1,295936,"MERun -- a Laser monitoring run",G__setup_memvarMERun,G__setup_memfuncMERun);
   G__tagtable_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunManager),sizeof(MERunManager),-1,295936,"MERunManager  -- manages laser monitoring runs",G__setup_memvarMERunManager,G__setup_memfuncMERunManager);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplETStringcOTH2mUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTH2mUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplETStringcOunsignedsPintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplETStringcOfloatcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TCanvas);
   G__tagtable_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcal),sizeof(MusEcal),-1,263424,"MusEcal -- Monitoring utility for survey of Ecal",G__setup_memvarMusEcal,G__setup_memfuncMusEcal);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOMERunmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOMERunmUgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOfloatcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOboolcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_pairlEfloatcOboolgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOpairlEfloatcOboolgRcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOpairlEfloatcOboolgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_vectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplEunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUcOlesslEunsignedsPlonggRcOallocatorlEpairlEconstsPunsignedsPlongcOvectorlEpairlEfloatcOboolgRcOallocatorlEpairlEfloatcOboolgRsPgRsPgRmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_MusEcalcLcLHistCateg);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_MusEcalcLcLHistType);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_MusEcalcLcLdA);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplETStringcOMERunManagermUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMERunManagermUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplETStringcOTH1mUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTH1mUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEVarVector),sizeof(MEVarVector),-1,295936,"MEVarVector ",G__setup_memvarMEVarVector,G__setup_memfuncMEVarVector);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplEMEChannelmUcOMEVarVectormUcOlesslEMEChannelmUgRcOallocatorlEpairlEMEChannelmUsPconstcOMEVarVectormUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_METimeInterval),sizeof(METimeInterval),-1,295936,"MusEcal: a time interval",G__setup_memvarMETimeInterval,G__setup_memfuncMETimeInterval);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_listlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TText);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TLatex);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TPaveText);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_Event_t);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TQObject);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TPad);
   G__tagtable_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MECanvasHolder),sizeof(MECanvasHolder),-1,263424,"MECanvasHolder -- Monitoring utility for survey of Ecal",G__setup_memvarMECanvasHolder,G__setup_memfuncMECanvasHolder);
   G__tagtable_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEBDisplay),sizeof(MEEBDisplay),-1,263168,"MEEBDisplay -- Monitoring utility for survey of Ecal",G__setup_memvarMEEBDisplay,G__setup_memfuncMEEBDisplay);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplEintcOpairlEfloatcOfloatgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOpairlEfloatcOfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplEintcOTPolyLinemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTPolyLinemUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_listlETObjectmUcOallocatorlETObjectmUgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEEEDisplay),sizeof(MEEEDisplay),-1,263168,"MEEEDisplay -- Monitoring utility for survey of Ecal",G__setup_memvarMEEEDisplay,G__setup_memfuncMEEEDisplay);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGObject);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGLayoutHints);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGTextButton);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGVerticalFrame);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGHorizontalFrame);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGTransientFrame);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGGroupFrame);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGPopupMenu);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGCanvas);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGListBox);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGLabel);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGNumberEntry);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGMenuBar);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TRootEmbeddedCanvas);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_TGDockableFrame);
   G__tagtable_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEClickableCanvas),sizeof(MEClickableCanvas),-1,324608,(char*)NULL,G__setup_memvarMEClickableCanvas,G__setup_memfuncMEClickableCanvas);
   G__tagtable_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEPlotWindow),sizeof(MEPlotWindow),-1,295936,"MEPlotWindow -- ",G__setup_memvarMEPlotWindow,G__setup_memfuncMEPlotWindow);
   G__tagtable_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MERunPanel),sizeof(MERunPanel),-1,295936,"MERunPanel -- ",G__setup_memvarMERunPanel,G__setup_memfuncMERunPanel);
   G__tagtable_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEChanPanel),sizeof(MEChanPanel),-1,295936,"MEChanPanel -- ",G__setup_memvarMEChanPanel,G__setup_memfuncMEChanPanel);
   G__tagtable_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MELeafPanel),sizeof(MELeafPanel),-1,295936,"MELeafPanel -- ",G__setup_memvarMELeafPanel,G__setup_memfuncMELeafPanel);
   G__tagtable_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MEMultiVarPanel),sizeof(MEMultiVarPanel),-1,295936,"MEMultiVarPanel -- ",G__setup_memvarMEMultiVarPanel,G__setup_memfuncMEMultiVarPanel);
   G__tagtable_setup(G__get_linked_tagnum(&G__MusEcal_dict_srcLN_MusEcalGUI),sizeof(MusEcalGUI),-1,324864,"MusEcalGUI -- Monitoring utility for survey of Ecal",G__setup_memvarMusEcalGUI,G__setup_memfuncMusEcalGUI);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_MusEcalGUIcLcLdA);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_maplETStringcOMEPlotWindowmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOMEPlotWindowmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_vectorlETGPopupMenumUcOallocatorlETGPopupMenumUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETGPopupMenumUcOallocatorlETGPopupMenumUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_vectorlETGComboBoxmUcOallocatorlETGComboBoxmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETGComboBoxmUcOallocatorlETGComboBoxmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_vectorlETGGroupFramemUcOallocatorlETGGroupFramemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MusEcal_dict_srcLN_reverse_iteratorlEvectorlETGGroupFramemUcOallocatorlETGGroupFramemUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupMusEcal_dict_src(void) {
  G__check_setup_version(30051515,"G__cpp_setupMusEcal_dict_src()");
  G__set_cpp_environmentMusEcal_dict_src();
  G__cpp_setup_tagtableMusEcal_dict_src();

  G__cpp_setup_inheritanceMusEcal_dict_src();

  G__cpp_setup_typetableMusEcal_dict_src();

  G__cpp_setup_memvarMusEcal_dict_src();

  G__cpp_setup_memfuncMusEcal_dict_src();
  G__cpp_setup_globalMusEcal_dict_src();
  G__cpp_setup_funcMusEcal_dict_src();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMusEcal_dict_src();
  return;
}
class G__cpp_setup_initMusEcal_dict_src {
  public:
    G__cpp_setup_initMusEcal_dict_src() { G__add_setup_func("MusEcal_dict_src",(G__incsetup)(&G__cpp_setupMusEcal_dict_src)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMusEcal_dict_src() { G__remove_setup_func("MusEcal_dict_src"); }
};
G__cpp_setup_initMusEcal_dict_src G__cpp_setup_initializerMusEcal_dict_src;

