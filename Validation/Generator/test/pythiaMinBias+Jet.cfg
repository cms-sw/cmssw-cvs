process PRODJET = {

   # MessageLogger control
   #
   service = MessageLogger
   {
      untracked vstring destinations = {"cout"}
       
      # untracked vstring categories = { "FwkJob" }
 
      untracked PSet cout = 
      { 
         untracked PSet default = { untracked int32 limit = 0 }    # kill all messages in the log
         # untracked PSet FwkJob  = { untracked int32 limit = -1 }  # except *all* of FwkJob's
      }
       
      #untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}
   }
    


   # control point for all seeds
   #
   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 98765
   }
   # physics event generation
   #
   include "IOMC/GeneratorInterface/data/PythiaSourceMinBias.cfi"
   replace PythiaSource.maxEvents = 10000
   replace PythiaSource.pythiaHepMCVerbosity = false

   
include "SimGeneral/HepPDTESSource/data/pdt.cfi"

   module genCandidates = HepMCCandidateProducer {
    		string src = "source"
                untracked bool verbose = false
                bool stableOnly = true
    	        vstring excludeList = { "nu(e)0", "nu(mu)0", "nu(tau)0", "pi0", "gamma0", "K(L)0", "n0" }
   }

include "RecoJets/JetProducers/data/GenJetIcone5.cfi"
   replace iterativeCone5GenJets.towerThreshold = 0.5	   	
   replace iterativeCone5GenJets.coneRadius = 0.7	   	
   
   module GEN = PoolOutputModule
   {
      untracked string fileName = "pythiaMinBias.root"
   }

   path p1 = { genCandidates,iterativeCone5GenJets }
   endpath e = { GEN }

}
