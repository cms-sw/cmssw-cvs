process TEST = { 


     module hexDump = EcalHexDumperModule{
	 untracked int32 verbosity = 0
	 untracked bool writeDCC = false
	 untracked int32 beg_DCC_fed_id = 0
	 untracked int32 end_DCC_fed_id = 35
        	untracked string filename = 'dump.bin'
      }

     path p = {hexDump}





# if getting data from a raw binary file
     source = DAQEcalTBInputService{
               untracked vstring fileNames = { 'file:/localdisk/franzoni/data/H4-000028180-SM2-TEST_PULSE-MGPA' }
               untracked int32 maxEvents = -1
               untracked bool isBinary = true
    }


# if getting data from a .root pool file
#      source = PoolSource {
#                untracked vstring fileNames={'file:/localdisk/franzoni/data/h4b.00011511.A.0.0.root'}
#                untracked int32 maxEvents = -1
#                untracked uint32 debugVebosity = 10
#                untracked bool   debugFlag     = true
#               }





################################# configuring logs and verbosity
#     service = MessageLogger{
#       untracked vstring destinations = { "cout" }
##       untracked vstring debugModules = { "ecalEBunpacker" }
##       untracked vstring debugModules = { "ecalMonitorModule" }
#       untracked vstring debugModules = { "*" }
#       untracked vstring categories = { "EcalTBInputService",
#                                        "EcalBarrelMonitor"
#                                      }
#       untracked PSet cout = { untracked string threshold = "DEBUG"
#         untracked PSet default = { untracked int32 limit = 100000 }
#         untracked PSet EcalTBInputService = { untracked int32 limit = 1000000 }
#         untracked PSet EcalBarrelMonitorModule = { untracked int32 limit = 1000000 }
#         untracked bool noTimeStamps = true
#         untracked bool noLineBreaks = true
#       }
#     }





}




