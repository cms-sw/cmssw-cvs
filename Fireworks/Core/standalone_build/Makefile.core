# -*-make-*-
#  Autors:   Dmytro Kovalskyi
#            Johannes Muelmenstaedt
# 
ifndef VERBOSE
  QUIET := @
endif

ifeq ($(shell uname), Linux)
	SO_EXT := so
        MAKESHAREDLIB := -shared
else 
   ifeq ($(shell uname), Darwin)
         SO_EXT := dylib
        MAKESHAREDLIB := -dynamiclib
   endif
endif

include core.mk
# include project.mk

# 
# common compiler flags
COMPILERFLAGS := -Wall -O3 -m32 -fPIC
# COMPILERFLAGS := -Wall -O0 -g -fPIC
# common includes
INCLUDE := -I./ -I$(FWROOTSYS)/include -Icms $(addprefix -I,$(CoreIncludes))
# compiler
CC := c++

CFLAGS := $(COMPILERFLAGS) $(INCLUDE)  $(EXTRACFLAGS)

# linker
LINKER = c++
# linker flags
CoreMissingFlags = -lEG
#CoreLinkerFlags = -shared -m32 -Lexternal/lib -L$(FWROOTSYS)/lib -Lexternal/lib $(addprefix -l,$(CoreLibs)) $(CoreMissingFlags)
CoreLinkerFlags = $(MAKESHAREDLIB) -m32 -Lexternal/lib -L$(FWROOTSYS)/lib -Lexternal/lib $(addprefix -l,$(CoreLibs)) $(CoreMissingFlags) -lThread

# cms data format source files and their object files
CoreSources = $(wildcard cms/*/*/src/*.cc)
CoreObjects = $(addprefix tmp/,$(CoreSources:.cc=.o))
CoreSourcesC = $(wildcard cms/*/*/src/*.c)
CoreObjectsC = $(addprefix tmp/,$(CoreSourcesC:.c=.co))
# CoreObjects = $(addprefix tmp/,$(addsuffix .o,$(basename $(CoreSources)â€” )))

# cms data format dictionaries
CoreRootDicHeaders = $(wildcard cms/*/*/src/*LinkDef.h)
CoreRootDicSources = $(addprefix tmp/,$(CoreRootDicHeaders:.h=.cc))
CoreRootDicObjects = $(CoreRootDicSources:.cc=.ro)

CoreDictionaryIncludes = $(wildcard cms/*/*/src/classes.h)
CoreDictionaryXMLs     = $(CoreDictionaryIncludes:.h=_def.xml)
CoreDictionarySources  = $(addprefix tmp/,$(CoreDictionaryIncludes:.h=.cpp))
CoreDictionaryObjects  = $(CoreDictionarySources:.cpp=.do)

LibCore = CMSDataFormats

# Don't change
LinkerOptions := -Wl,-rpath -Wl,

LDLIBRARYPATH := `pwd` `pwd`/external/lib $(FWROOTSYS)/lib

all: core install

install:
	$(QUIET) echo '#!/bin/sh' > root.sh; \
	echo "CMSSW_BASE="`pwd` >> root.sh; \
	echo "export CMSSW_BASE" >> root.sh; \
	echo "ROOTSYS="`pwd`"/$(FWROOTSYS)" >> root.sh; \
	echo "export ROOTSYS" >> root.sh; \
	echo "LD_LIBRARY_PATH="`pwd`:`pwd`/external/lib:'$$ROOTSYS/lib' >> root.sh; \
	echo "export LD_LIBRARY_PATH" >> root.sh; \
	echo "DYLD_LIBRARY_PATH="`pwd`:`pwd`/external/lib:'$$ROOTSYS/lib' >> root.sh; \
	echo "export DYLD_LIBRARY_PATH" >> root.sh; \
	echo '$$ROOTSYS/bin/root.exe $$*' >> root.sh; \
	chmod u+x root.sh
#	$(QUIET) find tmp -name "*.d" -exec rm {} \;

core:   lib$(LibCore).$(SO_EXT) tmp/lib$(LibCore).$(SO_EXT).out

lib$(LibCore).$(SO_EXT): $(CoreObjects) $(CoreObjectsC) $(CoreRootDicObjects) $(CoreDictionaryObjects)
	$(QUIET) echo "linking core library $(LibCore)"; \
	$(LINKER) $(CoreLinkerFlags) -o lib$(LibCore).$(SO_EXT) \
	$(CoreObjects) $(CoreObjectsC) $(CoreRootDicObjects) $(CoreDictionaryObjects)

######################################################################################
# 
#                General rules for making object files
# 
######################################################################################

include common.mk

