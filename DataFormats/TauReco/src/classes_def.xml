<lcgdict>
  <class name="edm::AssociationMap<edm::OneToValue<reco::CaloJetCollection,reco::L2TauIsolationInfo, unsigned int> >">
      <field name="transientMap_" transient="true" />
  </class>
  <class name="edm::Wrapper<edm::AssociationMap<edm::OneToValue<reco::CaloJetCollection, reco::L2TauIsolationInfo, unsigned int > > >" />
  <class name="edm::helpers::Key<edm::RefProd<reco::CaloJetCollection > >"/>
  <class name="std::map<unsigned int,reco::L2TauIsolationInfo>"/>
  <class name="reco::L2TauIsolationInfo"/>


  <class name="reco::BaseTauTagInfo"/>
  <class name="std::vector<reco::BaseTauTagInfo>"/>
  <class name="edm::Wrapper<std::vector<reco::BaseTauTagInfo> >"/>
  <class name="edm::Ref<std::vector<reco::BaseTauTagInfo>,reco::BaseTauTagInfo,edm::refhelper::FindUsingAdvance<std::vector<reco::BaseTauTagInfo>,reco::BaseTauTagInfo> >"/>
  <class name="edm::RefProd<std::vector<reco::BaseTauTagInfo> >"/>
  <class name="edm::RefVector<std::vector<reco::BaseTauTagInfo>,reco::BaseTauTagInfo,edm::refhelper::FindUsingAdvance<std::vector<reco::BaseTauTagInfo>,reco::BaseTauTagInfo> >"/>
  
  <class name="reco::CaloTauTagInfo"/>
  <class name="std::vector<reco::CaloTauTagInfo>"/>
  <class name="edm::Wrapper<std::vector<reco::CaloTauTagInfo> >"/>
  <class name="edm::Ref<std::vector<reco::CaloTauTagInfo>,reco::CaloTauTagInfo,edm::refhelper::FindUsingAdvance<std::vector<reco::CaloTauTagInfo>,reco::CaloTauTagInfo> >"/>
  <class name="edm::RefProd<std::vector<reco::CaloTauTagInfo> >"/>
  <class name="edm::RefVector<std::vector<reco::CaloTauTagInfo>,reco::CaloTauTagInfo,edm::refhelper::FindUsingAdvance<std::vector<reco::CaloTauTagInfo>,reco::CaloTauTagInfo> >"/>

  <class name="reco::PFTauTagInfo"/>
  <class name="std::vector<reco::PFTauTagInfo>"/>
  <class name="edm::Wrapper<std::vector<reco::PFTauTagInfo> >"/>
  <class name="edm::Ref<std::vector<reco::PFTauTagInfo>,reco::PFTauTagInfo,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauTagInfo>,reco::PFTauTagInfo> >"/>
  <class name="edm::RefProd<std::vector<reco::PFTauTagInfo> >"/>
  <class name="edm::RefVector<std::vector<reco::PFTauTagInfo>,reco::PFTauTagInfo,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauTagInfo>,reco::PFTauTagInfo> >"/>
  
  <class name="reco::BaseTau"/>
  <class name="std::vector<reco::BaseTau>"/>
  <class name="edm::Wrapper<std::vector<reco::BaseTau> >"/>
  <class name="edm::Ref<std::vector<reco::BaseTau>,reco::BaseTau,edm::refhelper::FindUsingAdvance<std::vector<reco::BaseTau>,reco::BaseTau> >"/>
  <class name="edm::RefProd<std::vector<reco::BaseTau> >"/>
  <class name="edm::RefVector<std::vector<reco::BaseTau>,reco::BaseTau,edm::refhelper::FindUsingAdvance<std::vector<reco::BaseTau>,reco::BaseTau> >"/>
  <class name="edm::reftobase::Holder<reco::Candidate, edm::Ref<std::vector<reco::BaseTau>,reco::BaseTau,edm::refhelper::FindUsingAdvance<std::vector<reco::BaseTau>,reco::BaseTau> > >" />
  
  <class name="reco::CaloTau"/>
  <class name="std::vector<reco::CaloTau>"/>
  <class name="edm::Wrapper<std::vector<reco::CaloTau> >"/>
  <class name="edm::Ref<std::vector<reco::CaloTau>,reco::CaloTau,edm::refhelper::FindUsingAdvance<std::vector<reco::CaloTau>,reco::CaloTau> >"/>
  <class name="edm::RefProd<std::vector<reco::CaloTau> >"/>
  <class name="edm::RefVector<std::vector<reco::CaloTau>,reco::CaloTau,edm::refhelper::FindUsingAdvance<std::vector<reco::CaloTau>,reco::CaloTau> >"/>
  <class name="edm::reftobase::Holder<reco::BaseTau, edm::Ref<std::vector<reco::CaloTau>,reco::CaloTau,edm::refhelper::FindUsingAdvance<std::vector<reco::CaloTau>,reco::CaloTau> > >" />
  
  <class name="reco::PFTau"/>
  <class name="std::vector<reco::PFTau>"/>
  <class name="edm::Wrapper<std::vector<reco::PFTau> >"/>
  <class name="edm::Ref<std::vector<reco::PFTau>,reco::PFTau,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau>,reco::PFTau> >"/>
  <class name="edm::RefProd<std::vector<reco::PFTau> >"/>
  <class name="edm::RefVector<std::vector<reco::PFTau>,reco::PFTau,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau>,reco::PFTau> >"/>
  <class name="edm::reftobase::Holder<reco::BaseTau, edm::Ref<std::vector<reco::PFTau>,reco::PFTau,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTau>,reco::PFTau> > >" />

  <class name="reco::PFTauDecayMode"/>
  <class name="std::vector<reco::PFTauDecayMode>"/>
  <class name="edm::Wrapper<std::vector<reco::PFTauDecayMode> >"/>
  <class name="edm::Ref<std::vector<reco::PFTauDecayMode>,reco::PFTauDecayMode,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauDecayMode>,reco::PFTauDecayMode> >"/>
  <class name="edm::RefProd<std::vector<reco::PFTauDecayMode> >"/>
  <class name="edm::RefVector<std::vector<reco::PFTauDecayMode>,reco::PFTauDecayMode,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauDecayMode>,reco::PFTauDecayMode> >"/>
  <class name="edm::reftobase::Holder<reco::CompositeCandidate, edm::Ref<std::vector<reco::PFTauDecayMode>,reco::PFTauDecayMode,edm::refhelper::FindUsingAdvance<std::vector<reco::PFTauDecayMode>,reco::PFTauDecayMode> > >" />
  <class name="edm::Association<std::vector<reco::PFTauDecayMode> >"/>
  <class name="edm::Association<std::vector<reco::PFTau> >"/>
  <class name="edm::Wrapper<edm::Association<std::vector<reco::PFTauDecayMode> > >"/>
  <class name="edm::Wrapper<edm::Association<std::vector<reco::PFTau> > >"/>
  
  <class name="reco::CaloTauDiscriminatorByIsolationBase">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::CaloTauDiscriminatorByIsolation">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::CaloTauDiscriminatorByIsolationRef"/>
  <class name="reco::CaloTauDiscriminatorByIsolationRefProd"/>
  <class name="reco::CaloTauDiscriminatorByIsolationRefVector"/>
  <class name="edm::Wrapper<reco::CaloTauDiscriminatorByIsolation>"/>

  <class name="reco::CaloTauDiscriminatorBase">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::CaloTauDiscriminator">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::CaloTauDiscriminatorRef"/>
  <class name="reco::CaloTauDiscriminatorRefProd"/>
  <class name="reco::CaloTauDiscriminatorRefVector"/>
  <class name="edm::Wrapper<reco::CaloTauDiscriminator>"/>
  
  <class name="reco::CaloTauDiscriminatorAgainstElectronBase">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::CaloTauDiscriminatorAgainstElectron">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::CaloTauDiscriminatorAgainstElectronRef"/>
  <class name="reco::CaloTauDiscriminatorAgainstElectronRefProd"/>
  <class name="reco::CaloTauDiscriminatorAgainstElectronRefVector"/>
  <class name="edm::Wrapper<reco::CaloTauDiscriminatorAgainstElectron>"/>
  
  <class name="std::pair<reco::CaloTauRef, int>"/>
  <class name="std::vector<std::pair<reco::CaloTauRef, int> >" />

  <class name="std::pair<reco::CaloTauRef, float>"/>
  <class name="std::vector<std::pair<reco::CaloTauRef, float> >" />

  <class name="reco::PFTauDiscriminatorByIsolationBase">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::PFTauDiscriminatorByIsolation">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::PFTauDiscriminatorByIsolationRef"/>
  <class name="reco::PFTauDiscriminatorByIsolationRefProd"/>
  <class name="reco::PFTauDiscriminatorByIsolationRefVector"/>
  <class name="edm::Wrapper<reco::PFTauDiscriminatorByIsolation>"/>
  
  <class name="std::pair<reco::PFTauRef, int>"/>
  <class name="std::vector<std::pair<reco::PFTauRef, int> >" />

  <class name="std::pair<reco::PFTauRef, float>"/>
  <class name="std::vector<std::pair<reco::PFTauRef, float> >" />

  <class name="reco::PFTauDiscriminatorBase">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>

  <class name="reco::PFTauDiscriminator">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::PFTauDiscriminatorRef"/>
  <class name="reco::PFTauDiscriminatorRefProd"/>
  <class name="reco::PFTauDiscriminatorRefVector"/>
  <class name="edm::Wrapper<reco::PFTauDiscriminator>"/>
  

  <class name="reco::PFTauDecayModeAssociation">
    <field name="transientVector_" transient="true"/>
    <field name="fixed_" transient="true"/>
  </class>
  <class name="reco::PFTauDecayModeAssociationRef"/>
  <class name="reco::PFTauDecayModeAssociationRefProd"/>
  <class name="reco::PFTauDecayModeAssociationRefVector"/>
  <class name="edm::Wrapper<reco::PFTauDecayModeAssociation>"/>
  
  <class name="std::pair<reco::PFTauRef, reco::PFTauDecayMode>"/>
  <class name="std::vector<std::pair<reco::PFTauRef, reco::PFTauDecayMode> >" />


//Needed only for HLT-Open
<class name="reco::HLTTau"/>
  <class name="std::vector<reco::HLTTau>"/>
  <class name="edm::Wrapper<std::vector<reco::HLTTau> >"/>
  <class name="edm::Ref<std::vector<reco::HLTTau>,reco::HLTTau,edm::refhelper::FindUsingAdvance<std::vector<reco::HLTTau>,reco::HLTTau> >"/>
  <class name="edm::RefProd<std::vector<reco::HLTTau> >"/>
  <class name="edm::RefVector<std::vector<reco::HLTTau>,reco::HLTTau,edm::refhelper::FindUsingAdvance<std::vector<reco::HLTTau>,reco::HLTTau> >"/>

  <class name="edm::Ptr<reco::BaseTau>" />
  <class name="edm::PtrVector<reco::BaseTau>" />
</lcgdict>
